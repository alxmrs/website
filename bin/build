#!/usr/bin/env bash
#
# Invoke pandoc on $SRC, copy $STATIC assets over to $DST.
#

set -e

ROOT=$(dirname "$0")/..
# shellcheck source=bin/env
. "$ROOT"/bin/env
# shellcheck source=bin/logging
. "$ROOT"/bin/logging

mkdir -p "$DST"

shopt -s globstar
status "Markup-generation"

if ! python3 -c "import panflute" > /dev/null 2>&1; then
  pip3 --disable-pip-version-check install panflute
fi

# pandoc "$SRC"/{,**/}*."$SRC_EXT" --filter bin/zettel_map.py -t markdown_github --output testfile
# pandoc "$SRC"/{,**/}*."$SRC_EXT" -f markdown_github -t native --output ast
for file in "$SRC"/{,**/}*."${SRC_EXT}"; do

  pandoc $file --filter bin/zettel_map.py -t native >> agg

done

status "Rendering"
for file in "$SRC"/{,**/}*."${SRC_EXT}"; do
  # Strip `src` path from file string
  FROM="${file##$SRC}"
  # Define a target file with the new extension
  TO="${FROM%%$SRC_EXT}$DST_EXT"
  echo "$FROM --> $TO"
  mkdir -p "$(dirname "$DST$TO")"
  # shellcheck disable=SC2086
  pandoc $PANOPTS $file --output=$DST$TO || warn "Failed to create $TO"
done
#
#status "Copying over assets"
#for file in "$STATIC"/{,**/}*.*; do
#  FROM=$file
#  TO="$DST${file##$STATIC}"
#  echo "${FROM##$ROOT} --> ${TO##$ROOT}"
#  mkdir -p "$(dirname "$TO")"
#  cp "$FROM" "$TO" || warn "Failed to copy asset $TO"
#done
shopt -u globstar
