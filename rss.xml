<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
<title>Alex's Blog</title>
<link>https://alex.merose.com</link>
<description>The personal blog of Alex Merose.</description>
<language>en-US</language>
<webMaster>al@merose.com (Alex Merose)</webMaster>
<copyright>MIT or CC BY-SA 4.0</copyright>
<docs>https://www.rssboard.org/rss-specification</docs>
<generator>pandoc-rss</generator>
<item>
<title>Taking Meeting Notes: Humans vs AI</title>
<pubDate>Fri, 07 Feb 2025 13:39:00 +0000</pubDate>
<guid>https://alex.merose.com/meeting-notes/</guid>
<description><![CDATA[<p>I took the notes in a meeting today<a
href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>. Sometimes I get complements on how
I take notes. Today, though, I got an unusual one: In the middle of a
discussion that I was capturing, someone paused and asked, “Is this an
AI note-taking services? I don’t think so because it’s making spelling
mistakes.” I looked up from my keyboard a bit surprised, bearing a
smile.</p>
<p>It made me think a bit about the differences between how humans and
AIs take notes. One reason why she may have thought that I was an AI is
that I’ve gotten really good at simultaneously transcribing and
summarizing ideas – mostly, from my previous life as a high school
debater. I think this <em>is</em> something that an AI note-taking
service could reasonably learn to do, though I don’t know of a service
that does this today. Doing so lets me keep up to pace with the
conversation as it’s happening. Passing a reverse Turing Test<a
href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a> for note-taking is definitely a
skill that one can learn with practice – for example, when you have take
notes from a spreading<a href="#fn3" class="footnote-ref" id="fnref3"
role="doc-noteref"><sup>3</sup></a> opponent in a debate. (A related
useful skill is being able to write notes like this while simultaneously
thinking of things to say – a subject for another time.)</p>
<p>There’s an aspect of this style of note-taking that I think would be
non-trivial to replicate in an any AI-powered system – a feature that
might seem totally trivial: That is, I know when and where to add the
right <em>indentations</em>. The ability to organize threads
hierarchically (and faithfully!) in a conversation should be quite
difficult for an automated system. It requires decent context, not only
of what is being said, but how it relates to concepts mentioned
<em>outside</em> of the conversation. Maybe this would require a decent
world model<a href="#fn4" class="footnote-ref" id="fnref4"
role="doc-noteref"><sup>4</sup></a> or reasoning capabilities; I’m not
totally sure. The AI note-taking systems I’ve seen that approximate such
features require human collaboration.</p>
<p>It reminds me of what a teacher once said on social media about the
ChatGPT-generated homework of her students: it’s writing mediocre ideas
with perfect grammar and spelling. AI notes may provide clean
transcriptions and auto-generated summaries, but they are mediocre at
capturing the nuances of the conversation. After all, these details
matter quite a bit for the goal of taking notes in the first place:
they’re a medium for memory, or maybe, a medium that lets me forget<a
href="#fn5" class="footnote-ref" id="fnref5"
role="doc-noteref"><sup>5</sup></a>.</p>
<hr />
<h1 id="references">References</h1>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p><a
href="https://docs.google.com/document/d/18P_Uk2aL1hfcaJf4PJfYZJzmhvMSJjdmB_AJvjiZOVM/edit?tab=t.0#heading=h.ucu4t39djick">VirtualiZarr
Coordination Meeting</a><a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>Like, can I trick a human into believing that I’m an
AI?<a href="#fnref2" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn3"><p>https://en.wikipedia.org/wiki/Spreading_(debate)<a
href="#fnref3" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn4"><p>https://www.youtube.com/watch?v=dqBwKCabTXA<a
href="#fnref4" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
<li id="fn5"><p><a
href="https://www.reproof.app/blog/notes-apps-help-us-forget">Notes apps
are where ideas go to die. And that’s good.</a><a href="#fnref5"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>]]></description>
</item>
<item>
<title>New Law of Physics</title>
<pubDate>Thu, 06 Feb 2025 16:24:00 +0000</pubDate>
<guid>https://alex.merose.com/new-law-of-physics/</guid>
<description><![CDATA[<p>Scientists think they’ve found evidence to add
a new law of thermodynamics. Darwin’s Theory of Evolution seems to apply
to any system where there is reproduction, variation, and selection. The
theory might be a new universal law of information.</p>
<hr />
<h1 id="references">References</h1>
<ul>
<li>https://www.space.com/scientists-propose-missing-law-evolution-of-everything-in-the-universe</li>
</ul>]]></description>
</item>
<item>
<title>Notes on “A Comparison of Neuroelectrophysiology Databases”</title>
<pubDate>Mon, 27 Jan 2025 09:59:00 +0000</pubDate>
<guid>https://alex.merose.com/neuro-dbs/</guid>
<description><![CDATA[<p>Paper compares 4 intracranial
neuroelectrophysiology “data repositories” (read: data formats): - DABI:
Data Archive for the BRAIN Initiative - DANDI: Distributed Archives for
Neurophysiological Data Integration - OpenNeuro - Brain CODE These two
efforts also utilize NWB (Neurodata Without Borders) and BIDS (Brain
Imaging Data Structure).</p>
<p>The paper calls this field “neuroinformatics.” I really like
that.</p>
<p>One reason there’s more iEEG (intercranial EEG) data available these
days is due to FDA approval of DBS (Deep Brain Stimulation) therapies in
the last three decades.</p>
<p>Because this data is produced for primarily medical reasons, they
often also imply other forms of multi-modal imaging. For example,
imaging is likely taken in order to know where to properly place
electrodes. This leads to richer datasets.</p>
<p>Because these surgeries are so invasive and expensive, the production
of such neural data is quite rare. Thus, centralized datasets and data
standards are really important for the advancement of the field.</p>
<p>EEGLAB (from UCSD) and OpenNeuro (from Stanford) created NEMAR, the
Neuroelectromagnetic Data Archive and Tools Resource, in 2019.</p>
<p><a href="https://nda.nih.gov/">NIMH Data Archive</a>: <em>National
Institute of Mental Health</em> Data Archive. Makes data from human
subjects across many scientific domains anonymous and available. Not all
data is publicly available; many datasets have strict access
requirements.</p>
<p>Data governance definition (emphasis mine):</p>
<blockquote>
<p>Data governance is critical in well-established archive management
and data asset control. It involves establishing frameworks that dictate
how data are collected, stored, accessed, shared, and organized.
<strong>In the context of data archives, data governance oversees the
entire archival process, encompassing data retention policies, security
measures, access controls, and data integrity and privacy.</strong></p>
</blockquote>
<p>DANDI: a 2019 repository of neurophysiology and neuroimaging datasets
(i.e. “Dandisets”) for human and non-human data. Led by scientists at
MIT and Dartmouth. Intended to aid in the adoption of BIDS, NWB, and
NIDM (Neuroimaging Data Model). Includes W3C Provenance data
(W3C-PROV).</p>
<p>OpenNeuro was developed from OpenFRMI.org.</p>
<p>HED: Hierarchical Event Descriptors. It’s what NEMAR uses in addition
to BIDS.</p>
<p>On file formats (emphasis mine):</p>
<blockquote>
<p>A variety of neurophysiology data modalities (i.e., EEG, MEG, DBS,
and iEEG) results in a wide range of formats and structures, leading to
challenges in integrating and analyzing pooled data. <strong>The lack of
standardization of recorded file formats complicates building
large-scale datasets and requires file conversion.</strong> The
emergence of intracranial neurophysiology databases necessitated
improved standardization and harmonization protocols to ensure data
usability and integration. DABI, DANDI, OpenNeuro, and Brain-CODE offer
nuanced solutions to address this demand.</p>
</blockquote>
<p>BIDS is becoming the leading standard for harmonizing imaging
data.</p>
<p>BIDS abstracts common metadata across different imaging modalities,
where each modality has its own data format (and history).</p>
<p>On NWB vs BIDS - More common for cellular data, not as much for EEG
or MEG - NWB requires conversion of underlying format within a NWB file,
unlike BIDS, which allows modality-specific formats. - The benefit of
the host cost (conversion) is standardization, data chunking and
standard (lossless) compression.</p>
<p>DANDI’s platform requires data uploaders to adhere to data standards.
Cellular data is usually NWB; optical physiology uses OME-Zarr for
microscopy. Dandisets must adhere to BIDS-like lightweight file tree
hierarchy – as provided by the dandi CLI. BIDS is required for
neuroimaging data (like structural MRI, fMRI). Metadata standards follow
NIDM. The team helps both NWB and BIDS in developing standards.</p>
<p>They point out this inherent tradeoff between strict and loose
adhereance to neuro data standards:</p>
<blockquote>
<p>Some archives strictly adhere to standardization protocols, while
others offer more flexibility in accepted data formats. Data standards
make harmonization less challenging but may limit the amount of
collected data. On the other hand, accepting a broader range of formats
creates a harmonization hurdle. One solution is to accept formats that
can be converted into multiple acceptable data structures (e.g., BIDS or
NWB). While indiscriminate acceptance reduces time-consuming conversions
by providers, it leaves the harmonization task to users.</p>
</blockquote>
<p>IMO, this is where Zarr Virtualization may really deliver a good
solution. What if the code complexity and storage costs of data
conversion was low?</p>
<p>Beyond standards, data sharing “protocols” limits analysis:</p>
<blockquote>
<p>Many researchers elect to keep their datasets or metadata private,
while others upload incomplete sets, hindering the reanalysis efforts.
Some repositories allow data owners to upload agreements that require
co-authorship considerations, provide guidelines on crediting the sets,
and outline stipulations before releasing the data. BRAIN Initiative’s
guidelines for data sharing have continued to improve by adapting to the
needs of the data providers and users, removing ambiguity, and offering
a policy that can be uniformly implemented to enhance data sharing in
this field further.</p>
</blockquote>
<p>The Canadian’s Brain-CODE project mandates that data collected with
their funding has to be made option:</p>
<blockquote>
<p>In Canada, OBI mandates that all Integrated Discovery (“ID”) Programs
it funds provide data to Brain-CODE to foster collaboration and data
sharing. Therefore, OBI’s policy on data sharing states that the data
produced through its funding should be accessible with minimal
constraints in a responsible and timely manner</p>
</blockquote>
<p>The paper says that the existing data sharing efforts have led to
successes in Alzheimer’s treatment. That’s excellent!!</p>
<p>The paper calls out standard data collection processes, not just
post-processing standards, since post-processing can reduce the
underlying signal.</p>
<p>On standardization: &gt; Furthermore, limiting the number of possible
file formats or proposing a universal format would eliminate the need
for file harmonization.</p>
<p>Maybe Zarr could be that file format!</p>
<hr />
<h1 id="references">References</h1>
<p>https://pmc.ncbi.nlm.nih.gov/articles/PMC10327244/</p>
<figure>
<embed src="nihpp-2306.15041v2.pdf" />
<figcaption aria-hidden="true">A Comparison of Neuroelectrophysiology
Databases</figcaption>
</figure>]]></description>
</item>
<item>
<title>Zettel to go</title>
<pubDate>Sun, 19 Jan 2025 16:50:00 +0000</pubDate>
<guid>https://alex.merose.com/zettel-to-go/</guid>
<description><![CDATA[<p>I’ve just following some instructions<a
href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a> to get Obsidian set up on my mobile
and — get this — synced through git (!!!). If this works, it means I can
write <a href="a-second-second-brain.md">zettels</a> on the go. If I can
write these paper slips on the go, then…</p>
<blockquote>
<p>[Takes a long, pensive look out the window]</p>
</blockquote>
<p>then… I think I’ll just exist in cyberspace now.</p>
<hr />
<h1 id="references">References</h1>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li
id="fn1"><p>https://forum.obsidian.md/t/mobile-setting-up-ios-git-based-syncing-with-mobile-app-using-working-copy/16499<a
href="#fnref1" class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>]]></description>
</item>
<item>
<title>Low-level control in Jax with shard_map and Pallas</title>
<pubDate>Fri, 17 Jan 2025 14:25:00 +0000</pubDate>
<guid>https://alex.merose.com/low-level-jax/</guid>
<description><![CDATA[<p><em>Notes from the OpenXLA talk:</em> JAX:
Low-level control with shard_map and Pallas. <em>See references for the
full video.</em></p>
<h2 id="shard-map">Shard-Map</h2>
<p>“A souped-up parallel map” that parallelizes functions on multiple
devices, with each device receiving a different shard from the input
data.</p>
<p>“shmapped” <img src="assets/shard-map.png" /> ## Custom Kernels</p>
<h3 id="triton_call"><code>triton_call</code></h3>
<p>Call triton code from Jax</p>
<h3 id="pallas_call"><code>pallas_call</code></h3>
<p>Recommended. Expresses Kernes in Jax.</p>
<p>Custom kernels take in GPU array references (buffers), not arrays.
Must be loaded before computations can be run. <img
src="assets/pallas-kernels-example.png" /> Refs support mutation, unlike
the rest of Jax!</p>
<p><img src="assets/calling-a-pallas-kernel-in-jax.png" /></p>
<p>Pallas concepts like Grid and Block specs allow us to automatically
pipeline memory access in TPU and run across multiple async threads in
GPU.</p>
<p>Because matmul can be implemented recursively, we can break down a
big matmul into a smaller one. Then, small kernels can be more
effectively utilized on the hardware.</p>
<p><strong>Grids</strong>: specify how many times we exec the kernel,
and specify which instance of the kernel to execute. The grid, on GPU,
is executed asynchronously in parallel, and on TPU is executed
sequentially, pipelined. <img
src="assets/matmul-pallas-grids.png" /></p>
<p><strong>Block shape</strong>: How do we break down the inputs and
outputs into smaller components to be operated on by the kernel. <img
src="assets/matmul-pallas-block-shape.png" /> Pallas will automatically
care up arrays into the right block shape.</p>
<p><strong>Index map</strong>: for a particular instance in the kernel
in teh grid, which blocks should be inputs vs outputs. <img
src="assets/matmul-pallas-index-map.png" /></p>
<h2 id="why-pallas">Why Pallas?</h2>
<ul>
<li>Need to express an idea against the wishes of the compiler. Or, it’s
easier to work low level.</li>
<li>Supports both TPU (Mosaic/MLIR) and GPU (Triton).</li>
<li>It can sometimes fuse normal JITed code with custom kernel
code!!</li>
<li>Don’t need to learn new APIs, just use JAX</li>
<li>Debuggable</li>
<li>Memory access APIs allow for advanced scheduling optimizations</li>
<li>TPU Only: remote DMAs (allows custom collective kernels)
<ul>
<li>TODO(alxmrs): I need to look this up.</li>
</ul></li>
</ul>
<h2 id="is-there-a-program-model-difference-btw-pallas-and-triton">Is
there a program model difference btw Pallas and Triton?</h2>
<p>Main difference: Pallas is higher level wrt memory access. You can
say up-front what memory you’re going to use and it allows for automatic
scheduling.</p>
<p>Pallas does not have autotuning like Triton does.</p>
<hr />
<h1 id="references">References</h1>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5ilr4gcenaA?si=lPJ-jEjwFElzND-Z&amp;start=89" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>]]></description>
</item>
<item>
<title>GSPMD</title>
<pubDate>Fri, 17 Jan 2025 14:20:00 +0000</pubDate>
<guid>https://alex.merose.com/gspmd/</guid>
<description><![CDATA[<p><strong>AKA: “General and Scalable
Parallelization for ML Computation Graphs”</strong></p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/5ilr4gcenaA?si=jp19aHvAnyQ_0-_x&amp;start=89" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>
<hr />
<h1 id="references">References</h1>
<ul>
<li>https://arxiv.org/abs/2105.04663</li>
<li>https://youtu.be/5ilr4gcenaA?si=jp19aHvAnyQ_0-_x&amp;t=89</li>
</ul>]]></description>
</item>
<item>
<title>Machine Learning is a huge search problem.</title>
<pubDate>Thu, 16 Jan 2025 15:13:00 +0000</pubDate>
<guid>https://alex.merose.com/ml-is-a-huge-search-problem/</guid>
<description><![CDATA[<p>Embedded in the ML modeling process is a huge
<a
href="https://ai.stanford.edu/~zayd/why-is-machine-learning-hard.html">search
problem</a>:</p>
<p><img src="https://ai.stanford.edu/~zayd/images/lattice2.png"
alt="Why Machine Learning is Hard, by S. Z. Enam" /> <img
src="https://ai.stanford.edu/~zayd/images/lattice3.png"
alt="Why Machine Learning is Hard, by S. Z. Enam" /></p>
<hr />
<h1 id="references">References</h1>
<ul>
<li><a
href="https://ai.stanford.edu/~zayd/why-is-machine-learning-hard.html">S.
Zayd Enam’s <em>Why is machine learning ‘hard’?</em></a></li>
</ul>]]></description>
</item>
<item>
<title>Bringing E-Graphs to Python</title>
<pubDate>Wed, 15 Jan 2025 11:34:00 +0000</pubDate>
<guid>https://alex.merose.com/bringing-egraphs-to-python/</guid>
<description><![CDATA[<p><img
src="https://egraphs-good.github.io/assets/egg.svg"
alt="e-graphs-good" /> <img
src="https://jupytearth.org/_images/python-stack.png"
alt="The Scientific Python Ecosystem" /></p>
<p>Common things I take away from Saul’s talk: * OSS Python could
substantially benefit from frontier programming language (PL) research *
Talks about the birth of NumPy in 1995 * NumPy is “pointers, strides,
dtypes” between Python and C arrays. * History of OSS Python is an
ecosystem of collaborative, multi-stakeholder, interdependent yet
individual projects. * Terrific overview of the PyData library –&gt;
compiler / hardware targets, c. 2019 <img
src="https://egglog-python.readthedocs.io/latest/_images/ecosystem-graph.png"
alt="“How do we support targets today?”" /> * With new heterogenous
hardware environments and heavy industry incentives up and down the
software/hardware stack, tools seldom interoperate anymore. <strong>Now,
people have to choose silos in Python.</strong> * This talk argues that
the entire python ecosystem is a compiler! (maybe, one that doesn’t
interoperate very well.) * egglog / egraphs make it easier for different
libraries to write their own piece of the bigger compiler that is
PyData</p>
<hr />
<h1 id="references">References</h1>
<p><a
href="https://egglog-python.readthedocs.io/latest/explanation/2023_11_09_portland_state.html">“Bringing
E-Graphs to Python by <em>Saul Shanabrook</em></a></p>]]></description>
</item>
<item>
<title>PyTorch is Dead. Long Live JAX.</title>
<pubDate>Wed, 15 Jan 2025 11:21:00 +0000</pubDate>
<guid>https://alex.merose.com/long-live-jax/</guid>
<description><![CDATA[<p>The future of PyTorch is to become a more
complicated, more technical-debt ridden Jax.</p>
<hr />
<h1 id="references">References</h1>
<ul>
<li><a
href="https://neel04.github.io/my-website/blog/pytorch_rant/">PyTorch is
Dead. Long Live Jax.</a></li>
</ul>]]></description>
</item>
<item>
<title>Thunder Kittens &amp; Macro vs Micro Tiles</title>
<pubDate>Wed, 15 Jan 2025 10:17:00 +0000</pubDate>
<guid>https://alex.merose.com/thunder-kittens-macro-vs-micro-tiles/</guid>
<description><![CDATA[<p>A product of the <a
href="hazy-research-and-flash-attention.md">hazy-research-and-flash-attention</a>
lab is <a
href="https://github.com/HazyResearch/ThunderKittens">ThunderKittens</a>.
In their README, they write (emphasis mine):</p>
<blockquote>
<p>ThunderKittens is built from the hardware up – we do what the silicon
tells us. And modern GPUs tell us that they want to work with fairly
small tiles of data. A GPU is not really a 1000x1000 matrix multiply
machine (even if it is often used as such); it’s a manycore processor
where each core can efficiently run ~16x16 matrix multiplies.
<strong>Consequently, ThunderKittens is built around manipulating tiles
of data no smaller than 16x16 values.</strong></p>
</blockquote>
<p>This reminds me a lot of this issue I filed in Cubed comparing Triton
tiles and Zarr chunks: https://github.com/cubed-dev/cubed/issues/490</p>
<h2 id="macro-vs-micro-tiles-in"><img
src="assets/triton-tiling-hierarchy.jpg"
alt="Macro vs Micro tiles in" /></h2>
<h1 id="references">References</h1>
<ul>
<li><a href="gpus-go-brrr.md">gpus-go-brrr</a></li>
</ul>]]></description>
</item>
<item>
<title>GPUs Go Burrr</title>
<pubDate>Wed, 15 Jan 2025 10:10:00 +0000</pubDate>
<guid>https://alex.merose.com/gpus-go-brrr/</guid>
<description><![CDATA[<hr />
<h1 id="references">References</h1>
<ul>
<li>https://hazyresearch.stanford.edu/blog/2024-05-12-tk</li>
<li>https://github.com/HazyResearch/ThunderKittens</li>
<li>Community worth joining: <a
href="https://discord.gg/gpumode">https://discord.gg/gpumode</a></li>
</ul>]]></description>
</item>
<item>
<title>Deprecated vs Not Ready Yet</title>
<pubDate>Tue, 14 Jan 2025 19:56:00 +0000</pubDate>
<guid>https://alex.merose.com/deprecated-not-ready-yet/</guid>
<description><![CDATA[<p><a href="merely-difficult.md">Another</a>
classic joke about Google’s engineering culture:</p>
<blockquote>
<p>Everything is either deprecated or not ready yet.</p>
</blockquote>
<p>– Googlers to Nooglers during orientation.</p>
<figure>
<img src="https://goomics.net/img/2011-03-16_two_roads.png"
alt="Goomic: Everything is either deprecated or not ready yet" />
<figcaption aria-hidden="true">Goomic: Everything is either deprecated
or not ready yet</figcaption>
</figure>
<hr />
<h1 id="references">References</h1>
<p>https://goomics.net/50/</p>]]></description>
</item>
<item>
<title>Merely Difficult</title>
<pubDate>Tue, 14 Jan 2025 19:52:00 +0000</pubDate>
<guid>https://alex.merose.com/merely-difficult/</guid>
<description><![CDATA[<p>There’s an old joke about Google’s engineering
culture that goes like this:</p>
<blockquote>
<p>Come work at Google! Where the <em>impossible</em> is merely
<em>difficult</em>, and the <em>easy</em> is merely
<em>difficult</em>.</p>
</blockquote>
<p>– The L7 TL in Boulder, CO who first told it to me.</p>
<hr />
<h1 id="references">References</h1>]]></description>
</item>
<item>
<title>Hazy Research and the origins of FlashAttention.</title>
<pubDate>Tue, 14 Jan 2025 16:26:00 +0000</pubDate>
<guid>https://alex.merose.com/hazy-research-and-flash-attention/</guid>
<description><![CDATA[<p>The Hazy Research Lab, creators of Flash
Attention, combine both systems software engineering expertise with ML
algorithms development. In the algebra of a ML algorithm, there are a
lot of ways to follow equivalent equations. The best way to forge a
path, then, is to choose what best takes advantage of the underlying
hardware. This, in essence, is how FlashAttention was invented.</p>
<p>Since so much of ML is driven by the <a
href="bitter-lesson.md">bitter lesson</a>, knowing how to make use of
hardware as efficiently as possible is incredibly important. In my
opinion, a lot of the frontier of ML research and application right now
is in software systems.</p>
<p>In any case, my favorite contribution that Hazy Research has made is
their writing on GPU optimization a la <em><a
href="ref/gpus-go-brrr.md">GPUs Go Brrr</a></em>.</p>
<hr />
<h1 id="references">References</h1>
<ul>
<li><a href="ref/gpus-go-brrr.md">GPUs go brrr</a></li>
<li>https://www.latent.space/p/flashattention</li>
</ul>]]></description>
</item>
<item>
<title>The Petabyte FFT: Accelerated Cubed</title>
<pubDate>Tue, 14 Jan 2025 16:00:00 +0000</pubDate>
<guid>https://alex.merose.com/pbfft/</guid>
<description><![CDATA[<p><em>Originally sketched on September 29,
2023.</em></p>
<p>I’m incredibly excited about <a
href="https://cubed-dev.github.io/cubed/">Cubed</a>. When I first
learned about the project via this <a
href="https://xarray.dev/blog/cubed-xarray">Xarray blog post</a>, I knew
it was worth betting on. To be able to perform array computation
serverlessly – without having to worry about managing memory (!!) –
seems like the future of data science in the cloud.</p>
<p><em>This slide deck from Tom White, the primary author, does an
excellent job of introducing Cubed.</em></p>
<iframe height="400" width="100%" src="https://cubed-dev.github.io/cubed/cubed-intro.slides.html#/" title="Cubed: An Introduction" loading="lazy">
</iframe>
<h2 id="big-arrays-acceleration">Big Arrays &amp; Acceleration</h2>
<p>Maybe the primary source of my excitement was in this project’s
potential to change array acceleration. Today, performing computation
with arrays on GPUs/TPUs is still really difficult, even with the
cloud.</p>
<p><img
src="https://preview.redd.it/explain-please-v0-ma2mz5wxftod1.jpeg?auto=webp&amp;s=2b90dfa3b12e064f54333e1080b3dabbad914f48"
alt="All hope is lost" /> – <em><a
href="https://www.reddit.com/r/ExplainTheJoke/comments/1fgsbw7/explain_please/">source</a></em></p>
<p>Particularly difficult, until maybe recently, is working with really,
really large arrays on accelerators. For most ML projects, the standard
recommendation is to put as much of the dataset in memory (i.e. RAM) in
order to minimize wasted cycles traversing the memory hierarchy (both
the CPU and (G/T)PU hierarchies). Most ML data pipelines (e.g. tfds) are
designed to efficiently schedule resources (network, disk, RAM, CPUs,
etc.) to keep GPUs saturated. ML examples are often written into
protobuf (tf.records) or flatbuffers (I assume what pytorch uses?) and
then efficiently loaded into memory to keep <a
href="hazy-research-and-flash-attention.md">accelerator hardware as busy
as possible</a>.</p>
<p>This becomes much, much trickier to do when you can’t dump all your
tf.Examples in memory, or even on disk. This setting is common in the
world of frontier LLMs, but more interesting to me, in scientific
computing settings. How do you train an ML model when your dataset is
over a petabyte in size (or, say, <a
href="https://x.com/shoyer/status/1805735177517416749">6 PiBs</a>)?</p>
<blockquote class="bluesky-embed" data-bluesky-uri="at://did:plc:lozmph3nfogiyoi23m4qrxus/app.bsky.feed.post/3leq5wp7z622a" data-bluesky-cid="bafyreid5yz64yt6k3sai2olgihkqutddqcftfwj7hgmj3tavzkpmiw6ati">
<p lang="en">
<p>And if you really want a challenge, this is probably the biggest
singular Zarr dataset in existence (~6PiB):</p>
<pre><code>github.com/google-resea...&lt;br&gt;&lt;br&gt;&lt;a href=&quot;https://bsky.app/profile/did:plc:lozmph3nfogiyoi23m4qrxus/post/3leq5wp7z622a?ref_src=embed&quot;&gt;[image or embed]&lt;/a&gt;&lt;/p&gt;&amp;mdash; Al Merose (&lt;a href=&quot;https://bsky.app/profile/did:plc:lozmph3nfogiyoi23m4qrxus?ref_src=embed&quot;&gt;@al.merose.com&lt;/a&gt;) &lt;a href=&quot;https://bsky.app/profile/did:plc:lozmph3nfogiyoi23m4qrxus/post/3leq5wp7z622a?ref_src=embed&quot;&gt;January 1, 2025 at 7:44 PM&lt;/a&gt;</code></pre>
</blockquote>
<script async src="https://embed.bsky.app/static/embed.js" charset="utf-8"></script>
<p>Worse still: many modern ML tasks make use of multiple datasets. Each
example is commonly a windowed, jittered combination of several data
sources. In the geosciences, for example, it’s typical to require
combinations of multi-petabyte data sources. Can you imagine pre-caching
these windowed combinations as protobufs? It would literally expand the
amount of data needed to be stored <em>factorially</em> — starting from
petabytes!!</p>
<p>This, in a nutshell, is why work improving cloud-optimized data
loaders is so important. Imagine keeping accelerators busy while
creating ML examples just-in-time. Since streaming data into the unit of
compute is inevitable when it can only be stored in cloud buckets, data
loaders keeps accelerators saturated, navigating the memory hierarchy
for you, hopefully with a flexible interface. <a
href="https://earthmover.io/blog/cloud-native-dataloader/"><code>xbatcher</code></a>,
pioneered by <a href="https://earthmover.io/">EarthMover</a> and the <a
href="https://pangeo.io/">Pangeo collective</a>, is one such example of
this infrastructure. Maybe the one I’m most excited to use soon is <a
href="https://github.com/neuralgcm/neuralgcm/issues/97">this internal
data loader</a> developed by the team who created <a
href="https://research.google/blog/fast-accurate-climate-modeling-with-neuralgcm/">NeuralGCM</a>.
(I figure, the more I keep talking about it, the more likely the good
folks at Google will turn it into an open source package 😉). This is
also why, I argue, investment spent <a
href="https://github.com/earth-mover/icechunk/issues/570">benchmarking
and optimizing the internal components</a> of these data loaders is time
well spent.</p>
<p>Data loading, however, is only one part of the puzzle. Reshaping
data, today, is still quite a big pain, especially for petabyte-scale
inputs. Even with state-of-the-art cloud-optimized data formats,
coalescing source datasets into the appropriate shape for models is
data-engineering intensive. Note, for example, <a
href="https://discourse.pangeo.io/t/shuffling-and-windowing-an-xarray-dataset-for-machine-learning/4790?">Keenan’s
experience</a> just the other day (emphasis mine):</p>
<blockquote>
<p>In my work I’m struggling with providing data from xarray to a
machine learning model. I’m aware of tools like xbatcher in this <a
href="https://earthmover.io/blog/cloud-native-dataloader/">blog
post</a> and <a
href="https://discourse.pangeo.io/t/efficiently-slicing-random-windows-for-reduced-xarray-dataset/2447">this
other thread</a>. I run into two main sticking points:</p>
<ol type="1">
<li>Randomly shuffling examples is very important. We get vastly
different model performance depending on the order data is provided
during training (see <a
href="https://github.com/s-kganz/ForestLST/blob/main/notebooks/shuffling.ipynb">notebook</a>).</li>
<li><strong>Constructing windowed data with xarray is very memory
intensive.</strong> If I want to slice out all non-NA windows of a
certain size, I have to iterate through small chunks of the data (this
approach was the solution in the thread linked above).</li>
</ol>
<p><strong>My process now is to write an intermediate dataset for a
given window size, drop NAs, shuffle, then train a model. This works,
but then every time I want to modify the input data (e.g. try a 5x5
window instead of 3x3) I have to write a new intermediate
dataset.</strong></p>
</blockquote>
<p>Even with elegant interfaces to express data massaging (Xarray),
managing physical resources (memory, storage) takes up a significant
amount of developer time during ML modeling.</p>
<p>Maybe you’re like me, and after reading this, you find yourself
thinking, “Couldn’t we automate this data engineering task, especially
given a sufficient Xarray-based specification for what the data should
look like?” If so, then you’ll likely share my excitement for Cubed,
which, in my opinion, is a framework perfectly fit to address this
problem!</p>
<p>Cubed, unlike other data engineering systems, is array-aware. Since
it has been designed to respect memory constraints, it can automate
rechunking <a
href="https://www.frontiersin.org/journals/climate/articles/10.3389/fclim.2021.782909/full">ARCO
datasets</a> according to the desired output no matter how arbitrary.
Internally, Cubed strategically dumps intermediary arrays as Zarr
stores, as it has enough understanding of the global operation DAG and
underlying compute resources (namely, RAM), it solves this game of
memory whack-a-mole for you. That’s the dream of Cubed, as far as I
understand it.</p>
<h2
id="networked-array-scheduling-vs-hardware-array-scheduling">Networked
Array Scheduling vs Hardware Array Scheduling</h2>
<p>If you’ll permit me to indulge in a moment of possible science
fiction: what fundamentally separates the scheduling happening on the
data engineering side from the internals of the ML training or
inference? From where I stand, I can’t help but notice parallels between
the advanced scheduling systems happening in, say, <a
href="https://arxiv.org/abs/2301.13062">XLA</a> or MLIR, from the <a
href="https://github.com/cubed-dev/cubed/issues/333">scheduling
happening within Cubed</a>. If there are parallels, could we find a way
to make them work together?</p>
<p>I think so. And, for these reasons, I am passionate about investing
in finding ways to make Cubed work with accelerators.</p>
<p>The first milestone that I see worthwhile to pursue is to integrate
<a href="https://github.com/cubed-dev/cubed/issues/304">Cubed with
Jax</a>. Jax, for the uninitiated, is as simple as numerical/ML
libraries can get, but no simpler. This is how Jax was introduced to
me:</p>
<blockquote>
<p>Imagine you were tasked with designing the machine learning framework
of the future. What are the fundamental components the framework should
have, given that the goal is to make them run on heterogenous,
accelerated hardware? Well, after careful consideration, it should do
four specific things:</p>
<ol type="1">
<li>It should perform automatic differentiation (“autograd”).</li>
<li>It should offer linear algebra primitives (like NumPy)</li>
<li>It should handle randomness (since <a
href="https://pytorch-dev-podcast.simplecast.com/episodes/random-number-generators">randomness
on accelerators is non-trivial</a>)</li>
<li>It should come with standard crypo libraries (for security – you
should never roll your own – and also because this is non-trivial on
accelerators).</li>
</ol>
<p>That’s it. </br> </br> This, more or less, is <a
href="https://jax.readthedocs.io/en/latest/quickstart.html">Jax</a>
.</p>
</blockquote>
<p>– <em>Paraphrasing a talk I heard once at Google.</em></p>
<p>Jax works by providing these four essential components to Python via
a Just-In-Time (JIT) compilation. What this means, more or less, is you
can slap a decorator on your function of NumPy-like code, and it will
turn it into well optimized MLIR/XLA IR
(i.e. intermediate-representation) to run on all sorts of hardware.</p>
<p>(For the record, I think that PyTorch would also work well as the
underlying array acceleration framework. It can do pretty much
everything that I’ve described here. However, due to my understanding of
the <a href="ref/long-live-jax.md">trajectory of PyTorch’s development
path</a>, I think Jax is the better bet.)</p>
<p>Once this milestone is achieved, I think it will enable really
interesting stuff. For example, every serverless compute provider
underlying Cubed, in my understanding, offers serverless GPU support.
This infrastructure is getting more popular today for ML model inference
thus becoming a commodity. In practical terms, I imagine this would mean
non-trivially cutting down the time to perform compute-heavy operations
— the core array work would all be performed by GPUs (or TPUs).</p>
<p>Beyond this, I dream about the potential of “cross-scheduler” systems
optimization (i.e. Cubed vs the ML compiler). For example, in the
accelerator literature, a lot of research effort has been invested in
optimizing the memory layouts of data placed into accelerator memory. It
turns out that if you “defrag” the memory layout, i.e. it is contiguous,
it provides an affordance for you to hand-write GPU kernels to process
arrays much more efficiently. This, in my understanding, underlies the
<a href="https://openai.com/index/triton/">Triton compiler</a> from
Harvard and OpenAI.</p>
<p>The task of this hand-tuning is known as “kernel lowering.”
Affordances for lowering have been made available in both <a
href="https://github.com/triton-lang/triton">PyTorch via Triton</a> as
well as <a href="ref/low-level-jax.md">Jax via Pallas</a>. In my
opinion, optimizations like these are incredibly worth it from an
accelerator utilization perspective, but seldom invested in due to <a
href="ml-is-a-huge-search-problem.md">classic iteration cycles of ML
modeling</a>.</p>
<p>Imagine, if you will, being able to use memory-layout-optimized,
kernel-lowered accelerated array operations, without having to spend
days and days debugging every layer of the stack? This is the kind of
“dual-scheduler” optimization that I hope is possible with Cubed.</p>
<p>At the core of both <a
href="https://www.eecs.harvard.edu/~htk/publication/2019-mapl-tillet-kung-cox.pdf">accelerator
kernels</a> and <a
href="https://zarr.readthedocs.io/en/stable/user-guide/performance.html">managing
Zarr datasets</a> is the abstraction of the “chunk.” (I think the ML
compiler literature might call them “tiles,” but they buffer all the
same.) What if Cubed could seamlessly manage memory at every level, from
Zarr chunks to systolic array tiles? <a
href="thunder-kittens-macro-vs-micro-tiles.md">Are Zarr chunks not
merely macro tiles?</a></p>
<p><img src="assets/triton-tiling-hierarchy.jpg"
alt="The Triton Paper’s Tiling Hierarchy" /> ## Towards a real demo</p>
<p>This vision for Cubed may never be tractable. But, to me, it’s
something worth fighting for – one patch at a time. It’s worthwhile to
ground my dreaming in terms of practical milestones. I find these help
me resolve ambiguities, such as what to develop now vs what to put off
for later. In that spirit, I have a demo in mind to build around:</p>
<blockquote>
<p><strong>I want to perform an <a
href="https://en.wikipedia.org/wiki/Fast_Fourier_transform">FFT</a> on a
Petabyte dataset, like <a
href="https://github.com/google-research/arco-era5">ARCO-ERA5</a>. And,
I want to see if I can make it run substantially faster on accelerated
hardware.</strong></p>
</blockquote>
<p>If everything goes right, I think the final code for the whole demo
would look like this:</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> xarray</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> xrft</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> cubed <span class="im">import</span> Spec</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> cubed.runtime.executors.lithops <span class="im">import</span> LithopsDagExecutor</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="co"># </span><span class="al">TODO</span><span class="co">(alxmrs): how do you define a GPU-enabled spec?</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>spec <span class="op">=</span> Spec(work_dir<span class="op">=</span><span class="st">&#39;tmp&#39;</span>, allowed_mem<span class="op">=</span><span class="st">&#39;4GB&#39;</span>)</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a>ds <span class="op">=</span> xarray.open_zarr(</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a>    <span class="st">&#39;gs://gcp-public-data-arco-era5/ar/full_37-1h-0p25deg-chunk-1.zarr-v3&#39;</span>,</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>    chunks<span class="op">=</span><span class="va">None</span>,</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a>    chunked_array_type<span class="op">=</span><span class="st">&#39;cubed&#39;</span>,</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a>    from_array_kwargs<span class="op">=</span>{<span class="st">&#39;spec&#39;</span>: spec},</span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a>    storage_options<span class="op">=</span><span class="bu">dict</span>(token<span class="op">=</span><span class="st">&#39;anon&#39;</span>),</span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a>)</span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a>ar_full_37_1h <span class="op">=</span> ds.sel(time<span class="op">=</span><span class="bu">slice</span>(ds.attrs[<span class="st">&#39;valid_time_start&#39;</span>], ds.attrs[<span class="st">&#39;valid_time_stop&#39;</span>]))</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a>da <span class="op">=</span> ar_full_37_1h[<span class="st">&#39;2m_temperature&#39;</span>]</span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a>Fda <span class="op">=</span> xrft.dft(da.isel(time<span class="op">=</span><span class="dv">0</span>), dim<span class="op">=</span><span class="st">&#39;lat&#39;</span>, true_phase<span class="op">=</span><span class="va">True</span>, true_amplitude<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>Fda_1 <span class="op">=</span> xrft.idft(Fda, dim<span class="op">=</span><span class="st">&#39;freq_lat&#39;</span>, true_phase<span class="op">=</span><span class="va">True</span>, true_amplitude<span class="op">=</span><span class="va">True</span>, lag<span class="op">=</span><span class="dv">45</span>)</span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>Fda_1.compute(executor<span class="op">=</span>LithopsDagExecutor())</span></code></pre></div>
<p><em>Above code is based on examples from <a
href="https://github.com/google-research/arco-era5?tab=readme-ov-file#025-pressure-and-surface-level-data">ARCO-ERA5</a>,
the <a
href="https://xrft.readthedocs.io/en/latest/DFT-iDFT_example.html#A-case-with-real-data">xrft</a>
package, and <a
href="https://xarray.dev/blog/cubed-xarray">Cubed-Xarray</a>. Maybe <a
href="https://github.com/cubed-dev/cubed/issues/438#issuecomment-2598976475">FFTs
will be supported in Cubed</a> one day, who knows!</em></p>
<details>
<summary>
(Umm… are you sure this is a petabyte?)
</summary>
<p>No, I am not sure. Ok, I think you’re right. Single variables in
ARCO-ERA5 are more like <a
href="https://github.com/alxmrs/xarray-sql/issues/36#issuecomment-2024559470">4
TBs</a>. This is where my lack of atmospheric-physics is showing – I’m
not sure how to come up with a code example for computing an FFT in
Xarray that would be at the petabyte scale. However, I suspect it would
be quite possible to make one up. Maybe, it would look similar
processing the model-view data, which is stored in a <a
href="https://github.com/google-research/arco-era5/blob/main/docs/1-Model-Levels-Walkthrough.ipynb">reduced
gaussian grid</a>.</p>
</details>
<p>This challenge is very inspired by <a
href="https://github.com/jax-ml/jax/discussions/13842">this
discussion</a> in the Jax project inquiring how to perform FFTs of
&gt;100GB arrays. As of publication, it is currently unsolved. To me,
performing FFTs on large datasets is a sort of “word-count” of
array-processing frameworks: It’s a simple enough problem that once
achieved, proves capability of a huge class of problems.</p>
<p>In the future, my hope for Cubed is to become a new type of ML
framework, maybe like Anyscale’s <a
href="https://github.com/ray-project/ray">Ray</a>. With Cubed, I hope
that ML developers never have to worry about <a
href="https://github.com/jax-ml/jax/discussions/10131">OOM errors
again</a> (why not dream big? Though, there are lots of <a
href="https://github.com/cubed-dev/cubed/issues/518">design
opportunities</a> to make this possible).</p>
<p>Thanks for reading to the end. If this topic interests you, please
reach out to me (or file an <a
href="https://github.com/cubed-dev/cubed/issues">issue in Cubed</a> and
<a href="https://github.com/alxmrs/">tag me</a>).</p>]]></description>
</item>
<item>
<title>Bret Victor – Inventing on Principle</title>
<pubDate>Mon, 13 Jan 2025 21:35:00 +0000</pubDate>
<guid>https://alex.merose.com/bret-victor--inventing-on-principle/</guid>
<description><![CDATA[<ul>
<li>In your career as a technologist, whenever possible, invent on
principle. Find principles to guide everything you build. Live by
them.</li>
<li>“No Modes”: The guy who invented copy and paste invented on the
principle that software should not contain modes, or different
environments to do different things. That directly lead to the invention
of copy and paste.</li>
<li>Bret’s principle: when creating an interface, whenever possible,
remove the friction between the creator and the creation. (<em>my memory
is fuzzy on this one, I’ll have to re-watch the video</em>).</li>
</ul>
<hr />
<h1 id="references">References</h1>
<iframe width="560" height="315" src="https://www.youtube.com/embed/PUv66718DII?si=hFJqO7qHVQ95Ug79" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>]]></description>
</item>
<item>
<title>Marcel Duchamp and the Refusal of Work</title>
<pubDate>Mon, 13 Jan 2025 20:41:00 +0000</pubDate>
<guid>https://alex.merose.com/marcel-duchamp-and-the-refusal-of-work/</guid>
<description><![CDATA[<hr />
<h1 id="references">References</h1>
<figure>
<embed src="Alejandro-Tamayo-Readings.pdf" />
<figcaption aria-hidden="true">Marcel Duchamp and the Refusal of
Work</figcaption>
</figure>]]></description>
</item>
<item>
<title>Jevon’s Paradox</title>
<pubDate>Mon, 13 Jan 2025 20:17:00 +0000</pubDate>
<guid>https://alex.merose.com/jevons-paradox/</guid>
<description><![CDATA[<p>Just because a system or process becomes more
efficient, doesn’t mean it consumes less energy. In fact, it’s possible
that when it becomes more efficient, it leads to an <em>increase</em> in
demand.</p>
<p>Notable Examples: - Google SERP webpage optimization (pages were more
lightweight) lead to an <em>increase</em> of server load. Suddenly,
people from NBU countries were able to access the pages that they
weren’t able to load before. - Solar/renewable energy has been become
exponentially cheaper. Thus, energy generation has become substantially
more efficient. However, the proportion of the energy grid that
renewables makes up has remained more or less constant for several
decades because energy demand has also grown at similar rates (via <a
href="economics-for-the-future--beyond-the-superorganism.md">the
superorganism paper</a>). - When cars in the US (or, at least,
California) were mandated to become more efficient — either by fuel
economy or electrification — they also, more often then not, became
physically bigger. The electric hummer, for example, has the same carbon
footprint as a gas-powered sedan. - <a
href="https://www.goodreads.com/book/show/698373">More Work For Mother:
The Ironies Of Household Technology From The Open Hearth To The
Microwave</a>. - <a
href="https://bsky.app/profile/scifri.bsky.social/post/3lfppzvkvn72c">Expanding
highways. “Just one more lane, bro. That will fix traffic”.</a> - <a
href="https://bsky.app/profile/weisenthal.bsky.social/post/3lgtbtwkejk2o">when
stocks go down, they go back up</a> — # References</p>
<p>https://en.wikipedia.org/wiki/Jevons_paradox</p>]]></description>
</item>
<item>
<title>Economics for the future – Beyond the superorganism</title>
<pubDate>Mon, 13 Jan 2025 20:14:00 +0000</pubDate>
<guid>https://alex.merose.com/economics-for-the-future--beyond-the-superorganism/</guid>
<description><![CDATA[<ul>
<li>All productivity, as measured by GDP, leads to hydrocarbon
consumption.</li>
<li>Economics as a field of study has a big error by not properly
accounting for energy. We pay the interest on energy (oil), but not the
principle (10 million years of heat and pressure).</li>
<li>We will soon run out of fossil fuels altogether. We hit peak oil in
the 70s. Since then, we’ve been in the era of “tight oil”. The costs for
acquiring hydrocarbon energy will soon not be worth the payoff.</li>
<li>Debt pulls resources from the future into the present. But, we’ve
been in a 200 year bubble of abundant energy (industrial revolution) and
will not necessarily be able to pay back that debt.</li>
<li><h2
id="all-humans-together-thinking-of-each-person-as-an-atom-behaving-with-simple-rules-to-live-the-best-life-each-one-can-is-acting-like-a-superorganism.-this-superorganism-pursues-infinite-growth.-it-is-like-a-thermodynamic-heat-pump-trying-to-create-as-much-energy-surplus-as-possible-on-a-finite-planet.">All
humans together, thinking of each person as an atom behaving with simple
rules to live the best life each one can, is acting like a
superorganism. This superorganism pursues infinite growth. It is like a
thermodynamic heat pump trying to create as much energy surplus as
possible (on a finite planet).</h2>
<h1 id="references">References</h1></li>
</ul>
<p>https://www.sciencedirect.com/science/article/pii/S0921800919310067?ref=pdf_download&amp;fr=RR-2&amp;rr=901acc18df3567eb</p>]]></description>
</item>
<item>
<title>anndata</title>
<pubDate>Mon, 13 Jan 2025 15:12:00 +0000</pubDate>
<guid>https://alex.merose.com/anndata/</guid>
<description><![CDATA[<p><code>anndata</code> i.e. Annotated data is a
NumFOCUS-supported Python package that handles annotated data matricies
on memory and disk, and is between Pandas and Xarray.</p>
<blockquote>
<p>Without going into every fancy Python-based data structure, we think
that still today no other alternative really exists that:</p>
<ul>
<li>Handles sparsity</li>
<li>Handles unstructured data</li>
<li>Handles observation- and feature-level metadata</li>
<li>Is user-friendly</li>
</ul>
</blockquote>
<p>–<a
href="https://anndata.readthedocs.io/en/latest/tutorials/notebooks/getting-started.html">Getting
started guide</a></p>
<p>It is well integrated with: - Dask - PyTorch - Awkward Arrays - Zarr
- TileDB?</p>
<hr />
<h1 id="references">References</h1>
<p>https://anndata.readthedocs.io/en/latest/</p>]]></description>
</item>
<item>
<title>Metamorphic Testing for ML</title>
<pubDate>Mon, 13 Jan 2025 14:30:00 +0000</pubDate>
<guid>https://alex.merose.com/metamorphic-testing-for-ml/</guid>
<description><![CDATA[<p><a
href="metamorphic-testing.md">metamorphic-testing</a> can be used for
Machine Learning, since ML systems are really hard to test.</p>
<p>This method reminds me a lot of common [[data augmentation]]
strategies for model pretraining, such as MAE, or more traditional
algorithms like [[jitter]].</p>
<hr />
<h1 id="references">References</h1>
<ul>
<li>https://www.hillelwayne.com/post/metamorphic-testing/</li>
<li>https://www.cs.hku.hk/data/techreps/document/TR-2017-04.pdf</li>
<li>https://arxiv.org/abs/1807.10453</li>
<li>https://bmcbioinformatics.biomedcentral.com/articles/10.1186/1471-2105-10-24</li>
</ul>]]></description>
</item>
<item>
<title>Metamorphic Testing</title>
<pubDate>Mon, 13 Jan 2025 14:14:00 +0000</pubDate>
<guid>https://alex.merose.com/metamorphic-testing/</guid>
<description><![CDATA[<p>Property based testing is difficult because
it’s hard to find good properties. Metamorphic testing is a type of PBT
under a “metamorphic relation”. Here, we see if the outputs <em>all
match</em> when many of them have undergone automated mutation (that
shouldn’t but <em>could</em> affect the output).</p>
<blockquote>
<p>For example, if a given soundclip transcibes to
output <code>out</code>, then we should <em>still</em> get
output <code>out</code> if we:</p>
<ul>
<li>Double the volume, or</li>
<li>Raise the pitch, or</li>
<li>Increase the tempo, or</li>
<li>Add some background static, or</li>
<li>Add some traffic noises, or</li>
<li>Do any combination of the above.</li>
</ul>
</blockquote>
<p>… &gt;We could, for example, download an episode of <em>This American
Life</em>, run the transformations, and see if they all match.<a
href="https://www.hillelwayne.com/post/metamorphic-testing/#fn:tam">1</a> We
have useful tests <em>without listening to the voice clip.</em> We can
now generate complex, deep tests without the use of an oracle!</p>
<hr />
<h1 id="references">References</h1>
<p>https://www.hillelwayne.com/post/metamorphic-testing/</p>]]></description>
</item>
<item>
<title>Arrayloader Benchmarks</title>
<pubDate>Mon, 13 Jan 2025 12:14:00 +0000</pubDate>
<guid>https://alex.merose.com/arrayloader-benchmarks/</guid>
<description><![CDATA[<hr />
<h1 id="references">References</h1>
<p>https://blog.lamin.ai/arrayloader-benchmarks</p>]]></description>
</item>
<item>
<title>Complete Lattice</title>
<pubDate>Sun, 12 Jan 2025 18:17:00 +0000</pubDate>
<guid>https://alex.merose.com/complete-lattice/</guid>
<description><![CDATA[<p>A <a href="src/lattice.md">lattice</a> is
complete if <em>all</em> subsets have both a join and a meet. A complete
lattice is more restrictive than a normal lattice.</p>
<p>Every non-empty finite lattice is complete.</p>
<p><a
href="https://en.wikipedia.org/wiki/Complete_lattice#Examples">Examples</a>:</p>
<blockquote>
<p>The power set of a given set, ordered by inclusion. The supremum is
given by the union and the infimum by the intersection of subsets.</p>
<p>…</p>
<p>The convex subsets of a real or complex vector space, ordered by
inclusion. The infimum is given by the intersection of convex sets and
the supremum by the convex hull of the union.</p>
</blockquote>
<hr />
<h1 id="references">References</h1>
<p>https://en.wikipedia.org/wiki/Lattice_(order)#Completenes</p>]]></description>
</item>
<item>
<title>Complete Semilattice</title>
<pubDate>Sun, 12 Jan 2025 18:13:00 +0000</pubDate>
<guid>https://alex.merose.com/complete-semilattice/</guid>
<description><![CDATA[<p>Apparently, this term doesn’t mean much. Why?
Well, if a <a href="src/semilattice.md">semilattice</a> is complete (all
subsets hold the meet / join property), then it will be complete in the
other direction, making it a <a
href="complete-lattice.md">complete-lattice</a></p>
<blockquote>
<p>[A] complete meet-semilattice has all non-empty meets (which is
equivalent to being bounded complete) and all directed joins. If such a
structure has also a greatest element (the meet of the empty set), it is
also a complete lattice.</p>
</blockquote>
<p>Why does this term exist? Probably, because we only care about
completeness for one operation, either just the <em>meet</em> or just
the <em>join</em>.</p>
<hr />
<h1 id="references">References</h1>
<p>https://en.wikipedia.org/wiki/Semilattice#Complete_semilattices</p>]]></description>
</item>
<item>
<title>Semilattice</title>
<pubDate>Sun, 12 Jan 2025 18:09:00 +0000</pubDate>
<guid>https://alex.merose.com/semilattice/</guid>
<description><![CDATA[<p>A semilattice is like a directed <a
href="src/lattice.md">lattice</a> in either<br />
the <em>meet</em> (LCM) or <em>join</em> (GCD) direction (“for
<em>any</em> nonempty finite subset”).</p>
<p><em>Meet</em>-semilattices are “lower semilattices” whereas
<em>join</em>-semilattices are “upper<br />
semilattices.”</p>
<blockquote>
<p>A set S partially ordered by the binary relation ≤ is a
meet-semilattice if<br />
For all elements x and y of S, the greatest lower bound of the set {x,
y} exists. — # References</p>
</blockquote>
<p>https://en.wikipedia.org/wiki/Semilattice</p>]]></description>
</item>
<item>
<title>A Second Second-Brain</title>
<pubDate>Sun, 12 Jan 2025 16:53:00 +0000</pubDate>
<guid>https://alex.merose.com/a-second-second-brain/</guid>
<description><![CDATA[<p>It’s the eve of the start of my new job. I
start on Monday the 13 – fitting, since I quit on Friday the 13th.</p>
<p>It’s been quite a busy few weeks that I’ve been home. These previous
two days were especially exhausting. Between too many errands and
driving hours to see an old friend, I’m really happy to have a down day
at home. Besides a notable walk and phone call, I’ve nearly entirely
spent the whole day inside, rekindling a project I started once before
but then let fall by the wayside: a <a
href="zettel.md">zettelkasten</a>.</p>
<p>For several days, I was planning on throwing out everything I had
built and start anew. That is, until <a
href="https://www.linkedin.com/in/bkhogan2/">Brian</a>, the person I
spoke to on the phone, recommended I give Obsidian a try. Certainly, I
had heard a lot of praise for the tool from a lot of tech-type people on
the internet, but I had yet to give it a try – or, even really see what
it was all about. After describing what I was looking for, or rather,
what I didn’t like in note taking tools, Brian really encouraged me to
pay attention to Obsidian.</p>
<p>Anyway, a quick Google lead me to this video. Quickly, I got excited,
texting <a href="jason.md">Jason</a> – my fellow information hoarder and
dear friend – that this was likely the tool we both were looking
for.</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/E6ySG7xYgjY?si=Ry1_N-2yp_VpgRoK" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen>
</iframe>
<p>Beyond the similarities in principles I share with Artem, I was very
pleased to learn that Obsidian could perfectly fit in to my existing
website (and <a href="zettle.md">theory of personal site as
hypertext</a>).</p>
<p>I needed only to substitute Artem’s four folders with the existing
directories of <a href="faqs.md">my website</a>: <code>src/</code> for
new paper slips, <code>src/static/assets/</code> for files, and
<code>templates/</code> at the root for new note templates. I’ve added
<code>src/private/</code> to my gitignore, for things I don’t want
publicly mirrored on the web/git. Now, with only a few hot keys in
Obsidian, I can search all of my ideas, add to them or create new ones,
and link to existing ideas.</p>
<p>I am shocked how compatible this tool is with static site generators!
And, for how well it integrates into pandoc! And the plug-ins! The
graph-view, the hot-keys, the overall polish! It’s rare in tech to find
a tool that perfectly fits the problem-sized hole in your life.</p>
<p>The biggest pain point I’ve had with rolling-my-own system is it’s
hard to edit and maintain. Who knew a software tool would come along
where I could keep ownership of my thoughts, yet access them with utter
ease? It really feels like having it all!</p>]]></description>
</item>
<item>
<title>Collect Things</title>
<pubDate>Sun, 29 Dec 2024 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/collection/</guid>
<description><![CDATA[<p>It’s the best advice for creativity I have yet
received.</p>
<p>I was a bit lost when I first heard it, having just quit my job about
to go travel for who-knew-how-long. I thought I might use my time off to
figure out new ways to be creative. Before I left, I had a phone call
with a close friend of mine <a
href="https://www.instagram.com/wyrm.rilye/">who is a musician</a>. Man,
I love Zach.</p>
<iframe style="border: 0; width: 350px; height: 470px;" src="https://bandcamp.com/EmbeddedPlayer/album=2738656371/size=large/bgcol=333333/linkcol=2ebd35/tracklist=false/transparent=true/" seamless>
<a href="https://wyrm-rilye.bandcamp.com/album/drone-love-me"> Drone
love me by Wyrm Rilye</a>
</iframe>
<p>When I told him my intentions, without missing a beat, he told me to
collect things. I wondered, “what kinds of things?”</p>
<p>Zach told me he took pictures of things he found beautiful,
downloaded bits of the internet on to his phone, and my favorite: he
would write down phrases or words that didn’t mean anything but that he
thought sounded cool. These would often become lyrics in his songs. The
category didn’t matter so much. The important part was to collect.</p>
<figure>
<img src="assets/sax.webp" alt="If walls could jam" />
<figcaption aria-hidden="true">If walls could jam</figcaption>
</figure>
<p>“Oh, I get it. But, don’t you have to have something you’re working
on to know what to collect?” I asked, trying to understand.</p>
<p>(To the best of my memory) Zach replied: “You don’t do this to
produce something. You do it for the pleasure of having your collection.
That’s it.” So much of the process behind art boils down to
decision-making, he posited. Therefore, it’s really important to
understand your own sense of taste. What from the world around you fits
into that palate?</p>
<figure>
<img src="assets/sarcatstic.webp" alt="A cat making fun of a god" />
<figcaption aria-hidden="true">A cat making fun of a god</figcaption>
</figure>
<p>I told Zach then how much my process involved thinking top-down. For
the few works of fiction that I had been noodling on at the time, I
started at high levels of abstraction and worked my way down to the
concrete and specific. I told him that his approach was as alien to me
as it was exhilarating. I loved how much of the music and visual art
that Zach makes comes from phenomena that he has observed and admired. I
loved the challenge for me to pay attention to the world around me, to
look beyond myself and within myself at the same time. And I love the
mystery behind the idea of works of art that come primarily from outside
my own mind, that are born out of happenstance and discernment – isn’t
this what Jung’s synchronicity is about, at some level?</p>
<figure>
<img src="assets/birth-aging-dying.webp" alt="Birth, Aging, Dying" />
<figcaption aria-hidden="true">Birth, Aging, Dying</figcaption>
</figure>
<p>We said goodbye after talking for a while. He was living in LA and I
was about to fly off to Australia. I left for fifteen months. By now, at
least as of writing, I’ve added bits from the whole world to my
collection. Boy, what a pleasure it has been! And, more than anything, I
can’t wait to pay Zach a visit and show it to him.</p>]]></description>
</item>
<item>
<title>How I backed up all my wedding footage in the cloud</title>
<pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/wedding-video/</guid>
<description><![CDATA[<iframe id="album" title="camille &amp;amp; alex // brick wedding highlight film // san diego, ca" src="https://player.vimeo.com/video/759313365?h=b758ca6554&amp;dnt=1&amp;app_id=122963" width="960" height="409" frameborder="0" allow="autoplay; fullscreen; picture-in-picture" allowfullscreen>
</iframe>
<p>My wife and I absolutely love our <a
href="https://amariproductions.com/camille-alex/">wedding video</a>. I
honestly can’t imagine how it could have been any better. In addition to
their excellent work, we chose <a
href="https://amariproductions.com/">Amari Productions</a> as our
videographers because they offered us the ability to get all our wedding
footage in raw. This really appealed to us since we think it would make
a really great anniversary present down the line to eventually produce a
longer wedding movie. This presents us a problem — how do we download
and store all this video?</p>
<p>We face an immediate problem: Amari has sent us a Google Drive folder
with the 100 or so gigabytes of raw files (zipped) that will be deleted
in about a few weeks. My wife and I are not at home at the moment, so
it’s a bit impractical for us to download all of this to a terabyte hard
drive.</p>
<aside>
<p>💡 Aside: Apparently, hard drives <a
href="https://datarecovery.com/rd/ssd-lifespans-how-long-can-you-trust-your-solid-state-drive">expire</a>.
This doesn’t bode well if we want to keep something so precious
indefinitely.</p>
</aside>
<p>A remote backup is definitely the right move. However, I am not quite
ready yet to <a href="https://workspace.google.com/pricing.html">pay for
that much Google Drive space</a> every year. Can I do better with Google
Cloud Storage?</p>
<p>Ideally, I want to solve for both 1) convenient data transfer and 2)
cheap long-term storage.</p>
<h1 id="whats-this-going-to-cost">What’s this going to cost?</h1>
<p>My approach was to set up a Google Cloud Storage bucket as cheaply as
possible. (For the non-technical reader: A bucket is like a folder in
Drive.) I’ve estimating that it would cost me about $14 in the first
year, given that I need to transfer the data and I’ll probably want to
download it once. This is cheap enough that I don’t really care to
estimate the exact annual cost thereafter, which will almost certainly
be lower (maybe $7 a year).</p>
<p>I don’t expect to access the data that often, so the archival storage
class seems good enough for me. I feel pretty confident about GCP’s lack
of data loss, so I only chose to host the data in a single data
center.</p>
<p><a
href="https://www.notion.so/68ac24431daf417d9b1a1c5de1416064">Wedding
Footage Cloud Storage Cost Estimates</a></p>
<h2 id="how-did-i-back-it-all-up">How did I back it all up?</h2>
<p>I basically followed <a
href="https://philipplies.medium.com/transferring-data-from-google-drive-to-google-cloud-storage-using-google-colab-96e088a8c041">this
article</a> ’s approach for copying data between Google Drive and Google
Cloud Storage. The steps for me looked like:</p>
<ol type="1">
<li>I “Added a Shortcut” from Amari’s shared folder to my personal
drive. This was essential for the it to show up in my mounted drive
later on.</li>
<li>I created a cloud bucket that suited my needs. I called it
<code>gs://merose-wedding-video-raw</code>. I typically use long,
verbose names like these since bucket names have to be globally
unique.</li>
<li>I created a new Colab notebook and followed the steps mentioned in
the article. After the setup, the actual transfer more or less amounted
to a <code>gsutil</code> invocation.</li>
</ol>
<p>Here’s the actual Colab that I used to make the transfer, if you’d
like to do something similar yourself (remember to change the Drive
folder name and destination bucket).</p>
<p><a
href="https://colab.research.google.com/drive/11BtoMT2hf1b-rWCojZy5zNXfpaiC8kPO#scrollTo=eLxQNdSwXQBZ">Google
Colaboratory</a></p>
<h2 id="takeaways">Takeaways</h2>
<p>I think I’ve met all my goals to have a convenient, cheap backup of
my wedding videos. This whole process was incredibly easy: With Colab, I
didn’t have to install or set anything up. Writing this article probably
took ten times as long as it did to write the code. My favorite part:
this basically amounts to renting a hard drive from Google, where
they’re on the hook for maintenance.</p>]]></description>
</item>
<item>
<title>Why I’m going on a digital detox</title>
<pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/digital-detox/</guid>
<description><![CDATA[<blockquote class="twitter-tweet">
<p lang="en" dir="ltr">
Breaking: Elon Musk has just reinstated Donald Trump’s Twitter account.
</p>
— No Lie with Brian Tyler Cohen (<span class="citation"
data-cites="NoLieWithBTC">@NoLieWithBTC</span>)
<a href="https://twitter.com/NoLieWithBTC/status/1594136753949974530?ref_src=twsrc%5Etfw">November
20, 2022</a>
</blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>I’m reading <a href="https://g.co/kgs/GW6WUJ">Cal Newport’s
<em>Digital Minimalism</em></a> right now. What a perfect time to do
this, just as Twitter is on the Musk train to hell.</p>
<p>The book is making me notice how little I really get out of my media
consumption habits. Screen Time shows that I spend four to five hours a
day on my phone (<em>edit: I have mislead myself here by looking at
weeks where I was on vacation. Though, my point still stands with
spending 2 hours per day on a screen, too</em>). That’s a part time job
amount of time — so, what am I getting out of it? Newport is helping me
understand the answer is not much. I’m mostly addicted to social apps
that I probably use to escape emotions instead of process them. While I
may get some utility from these platforms, they mostly exploit my
attention for profit. This provides a high opportunity cost: what if I
spent this second job worth of free time on “high quality leisure”
instead?</p>
<p>I’m taking the same approach in reading this book as I did when I
quite smoking. To quit cigarettes, I read <a
href="https://g.co/kgs/LBFdQF">Allen Carr’s <em>The Easy Way</em></a>,
where I didn’t have to stop lighting up until I finished reading the
book. This book actually worked. After finishing it, I never had a
cigarette again.</p>
<p>I’m reading <em>Digital Minimalism</em> and am using social media at
the same time. I find myself asking why I even like it in the first
place. <em>The East Way</em> goes on and on about how you don’t actually
like smoking. Smoking make you feel anxious and big tobacco has
brainwashed you into thinking that a cigarette will make this go away
(you are temporarily free from withdrawal pain that cigarettes cause). I
feel the same effect with my phone: media makes me feel anxious, from
FOMO or <a href="boredom.md">boredom</a> or emotional processing debt,
and it offers me the ability to kick the can down the road once more.
Cal Newport is less hypnotizing than Carr, but he is effective
nevertheless.</p>
<blockquote class="twitter-tweet">
<p lang="en" dir="ltr">
I'm only here because I want to find out how Twitter gracefully
degrades.
</p>
— Jaana Dogan ヤナ ドガン (<span class="citation"
data-cites="rakyll">@rakyll</span>)
<a href="https://twitter.com/rakyll/status/1593746078527913984?ref_src=twsrc%5Etfw">November
18, 2022</a>
</blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>The algorithms can see my disappointment, or the universe is trying
to send me a message, because these are the posts I’ve seen recently
about the state of social media:</p>
<p><a href="http://bradconte.com/files/misc/HackerNewsParodyThread/">A
Technical Blog Post by a Big Name Expert | Parody Hacker News</a></p>
<p>Hackernews has been the same for 10 years. What’s there to miss out
on?</p>
<blockquote class="twitter-tweet">
<p lang="en" dir="ltr">
incredible indictment that everyone is desperately looking for somewhere
to meet and talk to people, and no one has even mentioned Zuckerberg's
$70bn metaverse
</p>
— Luke Bailey (<span class="citation"
data-cites="imbadatlife">@imbadatlife</span>)
<a href="https://twitter.com/imbadatlife/status/1593548552474689536?ref_src=twsrc%5Etfw">November
18, 2022</a>
</blockquote>
<script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
<p>And, my personal favorite:</p>
<video playsinline controls preload="metadata" src="https://s3.us-west-2.amazonaws.com/secure.notion-static.com/717aa740-13f6-4311-8149-4f45a1be6713/IMG_7039.mov?X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&amp;X-Amz-Credential=AKIAT73L2G45EIPT3X45%2F20230221%2Fus-west-2%2Fs3%2Faws4_request&amp;X-Amz-Date=20230221T020704Z&amp;X-Amz-Expires=86400&amp;X-Amz-Signature=378fcf614580fc70eb5d666f6b4d833d920248f79e05d3506745f8f04c7841d2&amp;X-Amz-SignedHeaders=host&amp;x-id=GetObject" style="display: block; pointer-events: auto; width: 100%; background-color: rgb(242, 241, 238);">
</video>
<p>Given all this, I’m taking a digital detox come December.</p>
<h2 id="whats-a-digital-detox">What’s a digital detox?</h2>
<p>Newport calls this a digital declutter, which is a more accurate
description. The idea is to learn to live without most digital
technology for a while so that you know what small bit of it is worth
keeping.</p>
<p>I’ve not really done the book justice with my summary of it here. For
a better overview, I recommend my friend Alexander’s post.</p>
<p><a href="https://awsaavedra.com/posts/digital-minimalism/">Digital
Minimalism</a></p>
<h2 id="how-did-i-get-here">How did I get here?</h2>
<p>I don’t think it’s always been this bad. As recently as 2019, I felt
pretty at peace with my digital media consumption. I probably still
spent too much time online, but I didn’t really mind. My wife and I were
putting our phones to sleep well before our own bedtime. I consumed a
lot of news and social media, but it didn’t feel so all-consuming.
Around that time, I had successfully tamped down my intake of charged
political posts.</p>
<p>The pandemic made a huge difference in my habits. Stuck inside and
cut off from most human connections, I gave myself permission to do
whatever I needed to get by. With little else to do I spent
<strong><em>way</em></strong> more time online. In the middle of the
pandemic, I started using TikTok, a much more potent content aggregator
than I’ve ever used before.</p>
<h2 id="what-can-i-hope-for-next">What can I hope for next?</h2>
<p>Instead of connecting more with others online, I’m more looking
forward for the opportunity to connect more with myself. I’d like to
spend more time creating in <a href="boredom.md">solitude</a>, including
writing. I really like Newport’s recommendation to write more letters to
yourself. I do some form of this already, though I do hope to make it
more of a regular habit.</p>
<p>As far as keeping up with people, I’m already the weird one in my
friend groups who randomly calls people on the phone. And, I have no
trouble meeting new people in real life – I once made a friend on
Bart!</p>]]></description>
</item>
<item>
<title>Alexes’ Anniversary</title>
<pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/anniversary/</guid>
<description><![CDATA[<p>I got married a few weeks ago, and the
strangest thing happened the Friday before my <a href="wedding.md">big
day</a>. I headed to the barber shop to get my beard cleaned up, as one
does.</p>
<p>I got there right on time. “Alex for a 2:30 appointment?” I asked as
I entered the shop.</p>
<p>This question seemed to disgruntle the person in the waiting area
next to me. “<em>I’m</em> Alex who has a 2:30 appointment” he said as if
I was cutting in line.</p>
<p>Apparently, we both were right — we were just scheduled to see
different barbers. We exchanged pleasant glances, and carried on with
our trims. I soon found myself chatting with my barber, talking about
how excited I was for my wedding.</p>
<p>The other Alex perks up. “You’re getting married this weekend?”</p>
<p>“Yeah, this Sunday.” I respond.</p>
<p>“This Sunday? Of Memorial Day weekend??”</p>
<p>“Yeah, that’s right.” I’m a bit puzzled.</p>
<p>He chuckles. “<em>I</em> got married on Sunday of Memorial Day
weekend one year ago. My name is also Alex!”</p>
<p>“No way! What are the odds?” I think about how there are so may
Alexes. I’m not even the only Alex in my wedding party — one of three if
you include plus-ones, and one of four Als (we also have an Alec).</p>
<p>“No kidding! So you’re getting your hair cut for your wedding?”</p>
<p>“No, just a beard trim, but yes, it’s for my wedding.”</p>
<p>He laughs aloud. “You’re not going to believe this — I’m getting my
hair cut for a wedding… also Sunday of Memorial Day weekend!”</p>
<p>By now we each have stupid grins on our faces, though mine was a bit
more curious than his. He continues: “Guess what the groom’s name
is?”</p>
<p>“No!”</p>
<p>“Yup. It’s Alex!”</p>
<details>
<summary>
What <i>are</i> the odds?
</summary>
<p>I thought a bit about how to solve this during my wedding weekend. I
<a href="wedding/paradox.md">almost tried</a> to formalize and calculate
a solution. Instead, I went off to my honeymoon.</p>
</details>]]></description>
</item>
<item>
<title>Wedding</title>
<pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/wedding/</guid>
<description><![CDATA[<p>I see why people say that their wedding is the
best day of their life.</p>
<p><a href="https://weddingalbum.merose.com">Mine certainly
was.</a></p>]]></description>
</item>
<item>
<title>Random ideas to solve Alex’s Anniversary Paradox</title>
<pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/paradox/</guid>
<description><![CDATA[<p><em>WIP?</em></p>
<p>I’ve been thinking a bunch about how to tackle <a
href="anniversary.md">this problem</a>. It seems like my trip to the
barber shop seems like a weird variant of the <a
href="https://en.wikipedia.org/wiki/Birthday_problem">Birthday
Paradox</a>: What is the probability, in a group of <code>n</code>
randomly chosen people, at least three will have the same name and
wedding day?</p>
<p>I’ve poked around stats exchange and found some <a
href="https://stats.stackexchange.com/a/1718">general solutions</a> to
the birthday paradox, including an <a
href="https://stats.stackexchange.com/a/335132">R implementation</a>.
Though, I’m not convinced that this is a good approach. How do you
maintain assumptions and also account for names?</p>
<p>It seems like a better way would be to collect data on birthdays and
wedding anniversaries, and calculate the distribution. A project for
another day…</p>]]></description>
</item>
<item>
<title>Beam Pipelines as CLIs: A Hack</title>
<pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/beam-cli-hack/</guid>
<description><![CDATA[<p><em>created: 2021-02</em> <em>updated:
2021-08</em></p>
<p>While building a <a href="https://beam.apache.org/">Beam</a> pipeline
for work, I found myself surprised to find there was <a
href="https://beam.apache.org/documentation/sdks/python-pipeline-dependencies/">no
documentation</a> on how to structure the pipeline as a CLI <a
href="#fn1" class="footnote-ref" id="fnref1"
role="doc-noteref"><sup>1</sup></a>. I wanted to make running my
pipeline as easy as possible. What’s easier than installing a python
package via pip, and invoking a well-documented command? With features
like <a
href="https://pip.pypa.io/en/stable/reference/pip_search/#"><code>pip search</code></a>
and <code>--help</code> messages, one never needs to leave the
terminal.</p>
<p>It’s a bit strange to structure a Beam pipeline as a CLI. When I
usually use CLIs, I think about manipulating files on my local machine,
not orchestrating a distributed system to process potentially petabytes
of data. Maybe this is starting to change. AWS, GCP, and the like all
offer developers the ability to manipulate whole cloud architectures
from a CLI. Why not do the same for my ETL job?</p>
<p>After some trail and error, I ended up figuring out a hack to make it
work. A full demo of my solution can be found in <a
href="https://github.com/alxmrs/beam-cli-example">this project on
Github</a>.</p>
<pre><code>.
├── LICENSE
├── README.md
├── mytool
│   ├── __init__.py
│   ├── boom
│   ├── setup.py
│   └── subtool
│       ├── __init__.py
│       ├── helper.py
│       └── main.py
└── setup.py

2 directories, 9 files</code></pre>
<p>The secret ingredient to getting this right was to have nested
<code>setup.py</code> files. The inner <code>setup.py</code> file is
necessary so that each Beam worker gets the dependencies it needs
(library code + third party deps). However, the outer
<code>setup.py</code> is needed to publish the project and make a CLI
entry-point available. The script registered in the outer setup file,
here called <code>boom</code>, passes the path to the inner setup
file.</p>
<p>This may be unclear, let me show rather than tell:</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co">#!/usr/bin/env python3</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="co"># mytool/boom</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="co">#!/usr/bin/env python3</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> glob</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> logging</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> os</span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> subprocess</span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> sys</span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> tempfile</span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> tarfile</span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> mytool</span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="cf">if</span> <span class="va">__name__</span> <span class="op">==</span> <span class="st">&#39;__main__&#39;</span>:</span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a>    logging.getLogger().setLevel(logging.INFO)</span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-19"><a href="#cb2-19" aria-hidden="true" tabindex="-1"></a>    site_pkg <span class="op">=</span> mytool.__path__[<span class="dv">0</span>]</span>
<span id="cb2-20"><a href="#cb2-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-21"><a href="#cb2-21" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span>:</span>
<span id="cb2-22"><a href="#cb2-22" aria-hidden="true" tabindex="-1"></a>        <span class="im">from</span> subtool <span class="im">import</span> cli</span>
<span id="cb2-23"><a href="#cb2-23" aria-hidden="true" tabindex="-1"></a>    <span class="cf">except</span> <span class="pp">ImportError</span>:</span>
<span id="cb2-24"><a href="#cb2-24" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Install the subpackage.</span></span>
<span id="cb2-25"><a href="#cb2-25" aria-hidden="true" tabindex="-1"></a>        subprocess.check_call(<span class="ss">f&#39;</span><span class="sc">{</span>sys<span class="sc">.</span>executable<span class="sc">}</span><span class="ss"> -m pip install </span><span class="sc">{</span>site_pkg<span class="sc">}</span><span class="ss">&#39;</span>.split())</span>
<span id="cb2-26"><a href="#cb2-26" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-27"><a href="#cb2-27" aria-hidden="true" tabindex="-1"></a>        <span class="im">from</span> subtool <span class="im">import</span> cli</span>
<span id="cb2-28"><a href="#cb2-28" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-29"><a href="#cb2-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">with</span> tempfile.TemporaryDirectory() <span class="im">as</span> tmpdir:</span>
<span id="cb2-30"><a href="#cb2-30" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Convert subpackage to a tarball</span></span>
<span id="cb2-31"><a href="#cb2-31" aria-hidden="true" tabindex="-1"></a>        os.chdir(site_pkg)</span>
<span id="cb2-32"><a href="#cb2-32" aria-hidden="true" tabindex="-1"></a>        subprocess.check_call(</span>
<span id="cb2-33"><a href="#cb2-33" aria-hidden="true" tabindex="-1"></a>            <span class="ss">f&#39;</span><span class="sc">{</span>sys<span class="sc">.</span>executable<span class="sc">}</span><span class="ss"> ./setup.py sdist --dist-dir </span><span class="sc">{</span>tmpdir<span class="sc">}</span><span class="ss">&#39;</span>.split(),</span>
<span id="cb2-34"><a href="#cb2-34" aria-hidden="true" tabindex="-1"></a>        )</span>
<span id="cb2-35"><a href="#cb2-35" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-36"><a href="#cb2-36" aria-hidden="true" tabindex="-1"></a>        <span class="co"># Set tarball as extra packages for Beam.</span></span>
<span id="cb2-37"><a href="#cb2-37" aria-hidden="true" tabindex="-1"></a>        pkg_archive <span class="op">=</span> glob.glob(os.path.join(tmpdir, <span class="st">&#39;*.tar.gz&#39;</span>))[<span class="dv">0</span>]</span>
<span id="cb2-38"><a href="#cb2-38" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-39"><a href="#cb2-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">with</span> tarfile.<span class="bu">open</span>(pkg_archive, <span class="st">&#39;r&#39;</span>) <span class="im">as</span> tar:</span>
<span id="cb2-40"><a href="#cb2-40" aria-hidden="true" tabindex="-1"></a>            py_files_in_tar <span class="op">=</span> [f <span class="cf">for</span> f <span class="kw">in</span> tar.getnames() <span class="cf">if</span> f.endswith(<span class="st">&#39;.py&#39;</span>)]</span>
<span id="cb2-41"><a href="#cb2-41" aria-hidden="true" tabindex="-1"></a>            <span class="cf">assert</span> <span class="bu">len</span>(py_files_in_tar) <span class="op">&gt;</span> <span class="dv">0</span>, <span class="st">&#39;extra_package must include python files!&#39;</span></span>
<span id="cb2-42"><a href="#cb2-42" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-43"><a href="#cb2-43" aria-hidden="true" tabindex="-1"></a>        cli([<span class="st">&#39;--extra_package&#39;</span>, pkg_archive])</span></code></pre></div>
<p>This imports the <code>cli</code> function, an entrypoint to the
pipeline. The <code>--extra_package</code> is a standard way to <a
href="https://beam.apache.org/documentation/sdks/python-pipeline-dependencies/#local-or-nonpypi">package
non-PyPi dependencies</a> in your pipeline.</p>
<div class="sourceCode" id="cb3"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="co"># mytool/subtool/__init__.py</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> .main <span class="im">import</span> run</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> cli(extra<span class="op">=</span>[]):</span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a>    <span class="im">import</span> sys</span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a>    run(sys.argv <span class="op">+</span> extra)</span></code></pre></div>
<p>Thus, by nesting packages and pointing to the path to the inner
package, we get the best of both worlds: Beam can install the inner
package as a library to each remote worker. Users can install the tool
using python standards.</p>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Sure, the docs talk about packaging workers with
<code>setuptools</code>, but this explanation lacks my use case exactly.
The workers still need to be run from an executor, and I want that
executor to be installed with pip.<a href="#fnref1"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>]]></description>
</item>
<item>
<title>Cootie Catchers &amp; Thoughts on Electric Origami</title>
<pubDate>Sun, 23 May 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/electric-origami/</guid>
<description><![CDATA[<figure>
<img src="assets/catcher-title.webp"
alt="Prototypes and thinking about electric origami" />
<figcaption aria-hidden="true">Prototypes and thinking about electric
origami</figcaption>
</figure>
<p>I was reading hacker news aimlessly on the couch, as one does when
home alone on a Sunday afternoon, when I came across <a
href="https://news.ycombinator.com/item?id=27254480">this post</a>.
Printable circuits with a cheap inkjet printer? How exciting! Think of
the possibilities!</p>
<p>I shared the post with a few of my friends. <a
href="https://jbdoar.github.io/">Jason</a> got back to me, and we
started thinking about what we could do with this kind of tech.</p>
<p>Soon, the idea occurred to me: how about creating a little toy <a
href="https://en.wikipedia.org/wiki/Paper_fortune_teller">paper
fortune-teller</a> (or cootie catcher) that completes a circuit. Like,
it could turn on lights or make sounds, depending on how the
fortune-teller was folded. A bonus point about making a simple paper
toy: I am getting married in about a year, and wanted to have some sort
of interactive art thing at my wedding. With a hacked circuit printer, I
could create a viable electronic at the scale of a wedding while staying
on budget. Guests could fold their own cootie catcher, add LEDs and a
battery, and then play games with each other at cocktail hour. How
fun!</p>
<p>But, would it even work? I Googled around a bit and came to learn
that all the components of this project are pretty cheap. I ordered a
circuit ink pen and some electronics, and moved on to thinking about the
design.</p>
<p>I folded myself a fortune-teller and began thinking of how the
circuit would work. Here was my prototype v0.0:</p>
<figure>
<img src="assets/catcher-v00.webp"
alt="v0.0 of my electric paper fortune-teller" />
<figcaption aria-hidden="true">v0.0 of my electric paper
fortune-teller</figcaption>
</figure>
<p>I used quarters here in place of <a
href="https://www.batteriesandbutter.com/RV1025.html">coin-sized
batteries</a>. The lines represent paths with conductive ink, and the
black dots should become contact points for the batteries when
folded.</p>
<p>As you can see, when you press the “B” dots together, two outside
LEDs would turn on.</p>
<figure>
<img src="assets/v00-b-pressed.webp"
alt="v0.0 of a fortune-teller with the “B” circuit activated." />
<figcaption aria-hidden="true">v0.0 of a fortune-teller with the “B”
circuit activated.</figcaption>
</figure>
<p>When you press the “A” dots together, light would shine through the
center of the fortune teller.</p>
<figure>
<img src="assets/v00-a-pressed.webp"
alt="v0.0 of a fortune-teller with the “A” circuit activated." />
<figcaption aria-hidden="true">v0.0 of a fortune-teller with the “A”
circuit activated.</figcaption>
</figure>
<p>This seems fine, but I imagine using two batteries could get pricey
at the scale of ~200 guests for our wedding (not to mention, wasteful).
How could I create the catcher such that it used only one battery?</p>
<p>I unfolded the fortune-teller and tried to model the connections more
abstractly as a graph. The dotted lines below represent folded
connections, whereas solid lines would be silver-ink connections in
paper.</p>
<figure>
<img src="assets/graph-initial-sketch.webp"
alt="Representing the problem as a graph." />
<figcaption aria-hidden="true">Representing the problem as a
graph.</figcaption>
</figure>
<p>I noticed that the dotted lines here weren’t telling the whole
picture: Each line is associated with a connection “mode.” While alpha
was connected, beta wasn’t, and visa versa.</p>
<figure>
<img src="assets/graph-alpha-beta.webp"
alt="Adding modes to the graph." />
<figcaption aria-hidden="true">Adding modes to the graph.</figcaption>
</figure>
<p>The aspiring math teacher in me wants to ask: How would you draw the
circuit? It was fun for me to solve, and if you’ve read this far, I
imagine it would be fun for you too.</p>
<details>
<summary>
My Solution
</summary>
<p>
So, to come up with a more efficient solution, I tried to sketch out a
consistent solid line graph for each mode. After one incorrect attempt,
I figured out a configuration that would complete a full circuit for
each mode with only one battery.
</p>
<p>
<img src="/assets/graph-answer.webp" title="A solution to my simple graph problem">
</p>
<p>
(the trick was to cross the “A” connections)
</p>
<p>
This seemed good so far. However, for this to work, my graph needs to be
planar. Can I fit the one-battery circuit on one page?
</p>
<p>
The answer was “yes!” With another sketch, I had v0.1 of my design:
</p>
<p>
<img src="/assets/catcher-v01.webp" title="v0.1 of my electric paper fortune-teller">
</p>
</details>
<hr />
<p>Folded together, the circuit would turn on two outer LEDs when “A”
was pressed together, and the two other LEDs when “B” was pressed.</p>
<figure>
<img src="assets/v01-a-pressed.webp"
alt="v0.1 of a fortune-teller with the “A” circuit activated." />
<figcaption aria-hidden="true">v0.1 of a fortune-teller with the “A”
circuit activated.</figcaption>
</figure>
<figure>
<img src="assets/v01-b-pressed.webp"
alt="v0.1 of a fortune-teller with the “B” circuit activated." />
<figcaption aria-hidden="true">v0.1 of a fortune-teller with the “B”
circuit activated.</figcaption>
</figure>
<p>I told Jason all this, and he asked a good question: Would the silver
ink connections remain robust during folding? I did a quick inspect of
every crease, and to my best estimation, it seems to be the case! – no
short circuits.</p>
<figure>
<img src="assets/catcher-v01-short-front.webp"
alt="An inspection for shorts of the v0.1 design, front" />
<figcaption aria-hidden="true">An inspection for shorts of the v0.1
design, front</figcaption>
</figure>
<figure>
<img src="assets/catcher-v01-short-back.webp"
alt="An inspection for shorts of the v0.1 design, back" />
<figcaption aria-hidden="true">An inspection for shorts of the v0.1
design, back</figcaption>
</figure>
<p>Later, Jason would point out something that would require an
adjustment in my design. In v0.0, I was relying on each battery making
contact with the silver ink. However, in v0.1, as displayed in the
picture, I need to rely on a different mechanism to complete the
circuit. The cootie catcher needs to be folded in a way such that each
face of the battery makes contact with the silver ink. All this means is
that the position for my battery needs to be re-worked; it’s not a total
deal breaker.</p>
<p>I’m sure I’ll run into other issues that I can’t anticipate. I feel
pretty good about being able to sort those out as I complete v1.x of
this prototype, once my supplies arrive.</p>
<p>While I wait, I can’t help but dream of other possibilities based on
this simple experience.</p>
<p>It occurs to me that the kind of folks who find origami satisfying
probably overlap quite a bit with the folks who find circuit building
satisfying. The prospect of accessible printable circuits offers a
unique opportunity to cater to both audiences at once.</p>
<p>To generalize here, what if I could create a series of novel,
origami-based puzzles? Like, you get a piece of paper with normal ink
lines to indicate folds. A conductive ink layer interspersed with LEDs
offers the origamist clues on the fold order, guiding them to make the
origami shape by turning on lights.</p>
<p>Imagine creating a program to model circuits that live on folded
paper. Nodes could be polygons from folds with various types of
circuitry. Different kinds of edges might express relationships based on
neighborship on a plane or fold. Maybe we could speed up writing such a
program by extending existing PCB-design software. But, can it handle
the topological challenge?</p>
<p>Jason had fascinating ideas along the lines of different kinds of
circuit patterns. For one, he suggested the possibility of using
photoresistor and LED as a new type of interactive connection similar to
a fold. In this scheme, a circuit is complete when the active LED is
near the photoresistor and broken when they are apart. He had a few
other ideas of other types of circuits that could be used to make new
“edges” or interactive, foldable connections.</p>
<p>Jason’s current area of exploration: Paper planes.</p>
<p>What other kind of cool contraptions could we
make?</p>]]></description>
</item>
<item>
<title>My Proposal</title>
<pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/proposal/</guid>
<description><![CDATA[<figure>
<img src="assets/my-proposal-ring.webp"
alt="Me just after I’ve proposed" />
<figcaption aria-hidden="true">Me just after I’ve proposed</figcaption>
</figure>
<p>I like surprises, but <a
href="https://camille.merose.com">Camille</a> doesn’t. She’d rather be
able to look forward to things. For her, half the pleasure of enjoying,
say, a vacation comes purely from its anticipation.</p>
<p>I had a challenge before me: How could I give Cam the biggest
surprise of her life while also letting her look forward to it?</p>
<p>I originally had the idea to propose to Camille around the end of
year holidays. Every year, a few days leading up to Christmas, Camille’s
family take a trip to the cabins of Yosemite valley. Proposals at
Yosemite Christmas, in the Cary family, are practically an unofficial
tradition. Unfortunately for me, the <a
href="wedding/ring.md">engagement ring</a> I had picked out needed more
time to be made. And, wouldn’t it be nice to pave my own way? While a
proposal in front of family is great, I wanted the moment to honor the
character of our relationship.</p>
<p>Christmas’ day of 2019, I acted super weird. I let on that I was
giving Camille a Big Gift™, the vibes of which she definitely picked up
on. I am not a good liar. You should see my total absence of a poker
face when we play cards at Yosemite Christmas <a href="#fn1"
class="footnote-ref" id="fnref1" role="doc-noteref"><sup>1</sup></a>.
The way I pulled off authentic engagement-ring-under-the-tree energy was
by giving Camille a trip for Christmas. I gave her a vacation to New
Orleans for the start of Mardi Gras, over Valentines Day weekend.</p>
<p>Camille and I love jazz. Since we got together in 2012, music has
been a cornerstone of our relationship. And, as you can <a
href="pesto.md">probably guess</a>, Camille and I love food. For these
reasons (and the allure of gator tours), Cam and I have talked about
going to New Orleans together for forever.</p>
<p>“I was sure that he was going to propose in New Orleans,” Grandma
Shirley would tell us later. I’m glad I gave off that impression. I had
something different in mind.</p>
<figure>
<img src="assets/my-proposal-cemetery.webp"
alt="The cemetery by our house" />
<figcaption aria-hidden="true">The cemetery by our house</figcaption>
</figure>
<p>When we landed in Oakland, we ended up living nearby the <a
href="https://en.wikipedia.org/wiki/Mountain_View_Cemetery_(Oakland,_California)">Mountain
View Cemetery</a> <a href="#fn2" class="footnote-ref" id="fnref2"
role="doc-noteref"><sup>2</sup></a>. If you’re not familiar with <a
href="https://goo.gl/maps/9aeAdYfmShjbVVva9">the area</a>, the cemetery
acts somewhat like a public park. It has a stunning view of the San
Francisco Bay, including parts of the Bay Bridge. Camille and I would
often find ourselves taking a stroll in the cemetery while talking about
our lives. We would go there with a pad of paper whenever we needed to
make a big decision, ornate headstones being our preferred backdrop to
make defining choices. Along the way of figuring out the right <a
href="wedding/ring.md">engagement ring</a>, I knew that I wanted to
propose to Camille here.</p>
<p>The day of the proposal was like any other day – except I dressed
nicer than usual and was very nervous. I had to overcome what felt like
a bunch of wrenches thrown at me to get the timing just right. It was a
Friday, a week before Valentines day, and half a week from our vacation
to New Orleans. Camille was attending an all weekend <a
href="https://www.wildmed.com/course-type/wilderness-first-responder/">WFR</a>
training, so I was running out of time. I had just gotten the engagement
ring in my hands Thursday, after months of planning. Now, it was go
time. All I had to do was convince Camille to take a walk with me in the
cemetery after work.</p>
<p>Camille didn’t want to go! Another complication: She was training for
a half-marathon, which included a weekly 10-mile run, which she had
taken <em>that day</em>. Why was I making her go on walk? Couldn’t we
just stay at the house and hang out?</p>
<p>I had to think fast to come up with a good excuse. “No, let’s go on a
walk so we can talk shit about our roommates,” I told her. She was
down.</p>
<p>We gossiped as we strolled down the Ave. I don’t remember how the
conversation shifted when we got to the cemetery. All I remember is that
it was sunset when I popped down on one knee. My proposal speech was a
remembrance of when we first started dating, and she asked me where our
relationship was going. I had flown across the world to see her in New
Zealand, only four months into being an item. We were in a car, and it
was raining. Back then, I told her that we were choosing each other
every day. In the cemetery, almost eight years later, I told her that I
want to choose her for the rest of my life.</p>
<p>The rest of the evening was a dream. We went to happy hour at <a
href="https://wineonpiedmont.com/">Wine on Piedmont</a>, as was our
traditional Friday night activity. I got a reservation at the excellent
sicilian place on our block. We had an exciting trip to look forward to.
I got my wish – Cam was surprised.</p>
<figure>
<img src="assets/my-proposal-end.webp" alt="Cam and I" />
<figcaption aria-hidden="true">Cam and I</figcaption>
</figure>
<section id="footnotes" class="footnotes footnotes-end-of-document"
role="doc-endnotes">
<hr />
<ol>
<li id="fn1"><p>Not that it’s a big deal or anything, but I did win the
poker game that year.<a href="#fnref1" class="footnote-back"
role="doc-backlink">↩︎</a></p></li>
<li id="fn2"><p>The <a
href="https://en.wikipedia.org/wiki/Black_Dahlia#:~:text=Resting%20place">Black
Dahlia</a> happens to be buried there.<a href="#fnref2"
class="footnote-back" role="doc-backlink">↩︎</a></p></li>
</ol>
</section>]]></description>
</item>
<item>
<title>How I chose an engagement ring</title>
<pubDate>Wed, 21 Apr 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/ring/</guid>
<description><![CDATA[<p>When I first started looking for a ring, I was
looking at how much bang for my buck I could get in diamond sizes… which
was totally the wrong way to go about it. Cam wouldn’t want a big rock
on an ugly ring – it would get in the way and be a liability! Besides,
the ring had to compliment her style and personality.</p>
<p>The trick that worked for me to better figure out what would best
suit her was to talk <a
href="https://www.instagram.com/briannabanananana/">to</a> <a
href="https://www.instagram.com/sleepiegirl/">her</a> <a
href="https://www.instagram.com/ro.riches/">friends</a>. I ended up
starting a group chat with a few of her closest gals to gather intel.
Turns out that they regularly would share what kinds of jewelry / rings
that they liked. In any case, they had a much better idea of where to
start looking than I did.</p>
<p>For Cam, I knew that I wanted to get an environmentally friendly,
conflict-free diamond. I thought I would go towards the lab-grown
variety. However, her friends pointed me towards place like <a
href="https://fiatluxsf.com/">Fiat Lux</a>, <a
href="http://www.anastassiasel.com/">Anastassia Sel Jewelry</a>, <a
href="https://www.asraigarden.com/">asrai garden</a>, and <a
href="https://sofiazakia.com/">Sofia Zakia</a>. Not only do these
jewelers only source ethical stones, they also fit Camille’s style.</p>
<p>Here’s a general overview of how ordering a ring went down.</p>
<ul>
<li>FiatLux was based in San Francisco and located a quick BART ride
away from my office.</li>
<li>Visited them for the first time w/ <a
href="https://eatbigger.fish/">eve</a>. This was early October.</li>
<li>Met <a href="https://www.instagram.com/thee.georgie/">Georgie</a>,
who was awesome and would help me find the perfect ring.</li>
<li>Narrowed down various styles of rings while outlining which type of
stone to get.</li>
<li>From a (much) earlier convo with Camille, I knew that she liked
grey, imperfect diamonds.</li>
<li>I said that I wanted a hexagonal stone, and a ring to match.</li>
<li>Later, Georgie would find three stones; the middle one had the
greatest color in the light.</li>
<li>At thanksgiving without Camille, I couldn’t keep in my excitement
and blurted that I was ring shopping to my family. I showed them the
options I had. My Aunti <a
href="https://www.instagram.com/roz_creativestylist/">Rasmit</a> said
that I should go with the biggest stone.</li>
<li>I went with my gut and chose the middle-sized stone that was
elongated and had a beautiful shimmer. I also paired it with a <a
href="https://fiatluxsf.com/wp-content/uploads/2018/12/3595-W.png">Casia
Vestra</a>.</li>
<li>Once I decided, it was time to wait. I ordered the ring around late
November, with general plans to propose at the beginning of the new
year.</li>
<li>Turns out there is a holiday rush to make rings in time for end of
year proposals! That’s ok, by then, I changed my plans to pop the
question before Valentines day. The ring should be ready by then,
right?</li>
<li>Turns out the holiday rush can quickly turn into the Valentines’ day
rush. There were fewer and fewer days in my 10-day period to pop the
question, and the ring was still not ready. The weekend before our
Valentines day trip was not available to me to have a spontaneous
proposal, because Cam was enrolled in a wilderness medicine orientation
and would be busy the whole time!</li>
<li>The ring came, like, one week before my trip, on a Wednesday. It was
just in time for me to propose the way I wanted to. I had the wiggle
room of two days to <a href="proposal.md">propose</a>.</li>
</ul>
<video height="640" width="364" autoplay loop mute>
<source src="/assets/engagementring.mp4" type="video/mp4">
<p>Sorry, your browser does not support the video tag.
</video></p>]]></description>
</item>
<item>
<title>CSSA ML Workshop: Machine Learning on the Edge</title>
<pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/cssa/</guid>
<description><![CDATA[<p>The student org I used to be a part of (the <a
href="https://cssa-ucsd.org/">Cognitive Science Student Association</a>)
asked me to lead a workshop on machine learning at their <a
href="https://cssa-ucsd.github.io/conference2021">annual conference</a>.
The following are the slides and tutorial I presented. Most of my talk
consisted of live coding a simple ML application in the browser using
tensorflowjs and glitch.</p>
<p>Together, we made a <a
href="https://insidious-sticky-tank.glitch.me/">mock version</a> of <a
href="https://rfcx.org/">“Rainforest Connection”</a>, an app that’s
fighting climate change and protecting rainforests through mobile audio
classification.</p>
<figure>
<img src="assets/Web-RFCX.webp" alt="Web-Rainforest Connection" />
<figcaption aria-hidden="true">Web-Rainforest Connection</figcaption>
</figure>
<ul>
<li><a
href="https://docs.google.com/presentation/d/1KCVwKHB4NmEjwLM8pPYlCe1pYqG95-6GqMwChGIzAJ0/edit?usp=sharing">Slides</a></li>
<li>Workshop: Web Rainforest Connection
<ul>
<li>Inspiration: <a href="https://rfcx.org/">rfcx.org</a></li>
<li>Resources
<ul>
<li><a href="https://github.com/tensorflow/tfjs">TFJS Github
Project</a></li>
<li><a href="https://js.tensorflow.org/api/3.2.0/">TFJS API
Reference</a></li>
<li><a
href="https://github.com/tensorflow/models/tree/master/research/audioset/yamnet">Yamnet
Model source</a></li>
<li><a href="https://tfhub.dev/google/yamnet/1">Yamnet on TFHub:
trained, optimized models</a></li>
</ul></li>
<li><a href="https://glitch.com/edit/#!/quiver-twisty-border">Part 1:
Deployment</a>
<ul>
<li><em><a
href="https://glitch.com/edit/#!/insidious-sticky-tank">reference
solution</a></em></li>
</ul></li>
<li><a
href="https://colab.research.google.com/drive/1-yEPU0-qjBMfbU37xJTu09JVx0w9FfVO?usp=sharing">Part
2: Model optimization</a> ( time permitting)
<ul>
<li><em><a
href="https://colab.research.google.com/drive/1tsqEFUFNN7dTXV7FThMKiMiol1QU0soF?usp=sharing">reference
solution</a></em> ( documentation to come later)</li>
</ul></li>
</ul></li>
</ul>
<p>Talk participants (or otherwise), feel free to reach out to me with
questions or comments.</p>]]></description>
</item>
<item>
<title>Lattice</title>
<pubDate>Sat, 03 Apr 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/lattice/</guid>
<description><![CDATA[<p>A lattice is a partially ordered set, or
poset.</p>
<p>Here is a lattice ordered by divisibility:</p>
<figure>
<img
src="https://upload.wikimedia.org/wikipedia/commons/7/7c/Birkhoff120.svg"
alt="Lattice of 120 ordered by divisibility" />
<figcaption aria-hidden="true">Lattice of 120 ordered by
divisibility</figcaption>
</figure>
<p><a href="https://en.wikipedia.org/wiki/Lattice_(order)#Examples">See
other examples</a>.</p>
<p>Every two elements of a lattice has:<br />
- a <em>supremum</em>, or least upper bound, or <em>join</em>. e.g. <a
href="https://en.wikipedia.org/wiki/Least_common_multiple">LCM</a><br />
- an <em>infimum</em>, or greatest lower bound, or <em>meet</em>.
e.g. <a
href="https://en.wikipedia.org/wiki/Greatest_common_divisor">GCD</a> — #
References</p>
<p>https://en.wikipedia.org/wiki/Lattice_(order)</p>]]></description>
</item>
<item>
<title>A new meditation</title>
<pubDate>Sat, 13 Mar 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/ice/</guid>
<description><![CDATA[<p>A new meditation:</p>
<p>Let ice melt on your tongue.</p>
<p>Feel the cold on your palate.</p>
<p>Watch the pain fade into an electric buzz,</p>
<p>as you inhale a dragon’s breath.</p>
<p>Fight the nervous impulse to chew.</p>
<p>Notice when you <em>are</em> chewing, when you</p>
<p>became lost in a thought. Let the fragments</p>
<p>return you to the moment.</p>
<p><a href="smoothie.md">Taste</a> the present.</p>]]></description>
</item>
<item>
<title>15 minutes of boredom a day</title>
<pubDate>Fri, 01 Jan 2021 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/boredom/</guid>
<description><![CDATA[<p>A week ago (late 2020), <a href="goals.md">I
started a new habit</a>: I now try to find 15 minutes of boredom a
day.</p>
<p>These are uninterrupted periods of no stimulation. I have my phone
off or in another room. I avoid screens in general. No music plays in
the background. I just sit there alone with my thoughts and perceptions
– preferably outside.</p>
<p>I find my 15 minutes to be exhilarating. They start out… boring. Soon
enough, my mind will wonder and I’ll enjoy following its path.</p>
<p>I’ll sing the earworm stuck in my head while thinking about the next
revision of the <a
href="https://editor.p5js.org/alxrsngrtn/sketches/8Ndif6Ngl">hex tile
art</a> I’m working on. I’ll dig into a <a
href="zettel/determinism.md">joke my wife made about me</a> and reflect
on what it means. I’ll think of articles I want to write. I’ll think
about thinking.</p>
<p>Whereas <a href="ice.md">meditation</a> focuses on the absence of
thought in favor of presence, 15 minutes of boredom helps me form ideas.
I find the ritual to be refreshing even when I bear no new thoughts. I
relish the opportunity for peace and emotional
reflection.</p>]]></description>
</item>
<item>
<title>Emails to Self</title>
<pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/emails/</guid>
<description><![CDATA[<p>Tip: For better work-life balance, consider
sending emails to your self.</p>
<p>Separate your work and personal apps across devices. Don’t always be
available to receive work messages – when you close your laptop, work
should be done.</p>
<p>The hardest part of this separation, for me, is that shutting a
laptop doesn’t stop the spontaneous flow of ideas. Maybe when your <a
href="boredom.md">brain is trying to relax</a>, you think of a small
TODO that will make tomorrow better. Or, you feel inspired to create
something work related. Maybe you’ve encountered an article in your
feeds that you’d like to share with a co-worker.</p>
<p>Just send the thought from your personal to your work email. It’ll be
waiting for you in your inbox tomorrow. Thereafter, you can resume your
non-working life.</p>]]></description>
</item>
<item>
<title>Goal Setting</title>
<pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/goals/</guid>
<description><![CDATA[<p>In 2016, the year I graduated from college, <a
href="https://camille.merose.com">my partner, Camille,</a> gave me a <a
href="https://passionplanner.com">Passion Planner</a>.</p>
<p>This planner is a journal / ideation system that helps you figure out
what you want in life, and then helps you realize it. A guide designed
by someone who felt adrift after her own graduation, it was exactly what
I needed.</p>
<p>The <a
href="https://passionplanner.com/products/passion-roadmap">system</a>
works something like this: First, you brainstorm ways how you would like
to change your life (or what you’d like to accomplish). Then, you
organize your top goals per various time spans (lifetime, 3 years, 1
year, 3 months). Lastly, you break down the goals into a specific
<em>plan of action</em>, where you get to hold yourself accountable.
This plan of action involves literally scheduling milestones, reminders,
and due dates in the rest of the book (it’s a planner, after all).</p>
<p>I have to admit, the <em>planner</em> part of “Passion Planner” never
stuck for me. I don’t really keep track of my time or tasks on paper; I
prefer to use digital calendars and reminder systems. However, the model
of this book has given me a great sense of structure for my life. It
involves making monthly check-ins, to see if your actions are aligning
with your goals. In addition, I have a larger check-in at the end of the
year, to contemplate annual progress and cast new goals.</p>
<p>The process gives me the opportunity to reflect on the <a
href="zettel/determinism.md">shape of my life</a>. It feels great to
accomplish a goal I’ve set. Better still: it’s a real joy to see how
your goals change over time.</p>]]></description>
</item>
<item>
<title>Hypertext a la Zettelkasten</title>
<pubDate>Thu, 31 Dec 2020 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/zettel/</guid>
<description><![CDATA[<p>Ideally, I don’t want my website to be
<em>just</em> a blog.</p>
<p>I don’t think in terms of sequences of posts. I am not trying to
create a newsletter – while this seems fun, the upkeep feels like more
of a burden than empowered expression. Why not, instead, aim to express
systems of ideas free of time?</p>
<p>I have a <a href="zettel/ideas.md">lot of ideas</a>, but most of them
are small and only make sense in context with other thoughts. While I
can often coalesce these scattered thoughts into coherent essays, this
takes time and effort I seldom muster.</p>
<p><a href="goals.md">Every new years day</a> I conceive of a
“nice-to-have” resolution to start writing. Visions dance before me of
emulating great technical blogs that I spend the year reading. Alas, it
never goes this way, due to a sense of perfectionism and habit
inertia.</p>
<p>My dear friend <a href="http://eatbigger.fish">eve</a> mentioned the
other day that they were getting into this style of hypertext called <a
href="https://zettelkasten.de/introduction/">Zettelkasten</a>. Parsing
the (admittedly, lengthy) introduction filled me with excitement – this
is the approach that I’m looking for.</p>
<p>My intentions, given this new style of thinking, are as follows: -
Organize the media in my life into a web of atomic connections, based on
the Zettelkasten method and my own preferences for hypertext media. -
What media? Why not include every bookmark saved for later, every note
scrawled on my phone, all the (legible) journal pages I’ve deemed
publishable, and every podcast episode that’s filled me with joy? - ???
- Profit.</p>
<p>Well, let’s see how this experiment goes.</p>
<p>I’ll update this page with entry-points into my
Zettlekasten.</p>]]></description>
</item>
<item>
<title>Pesto, Chango!</title>
<pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/pesto/</guid>
<description><![CDATA[<p>My partner’s food intuition – her ability to
weave haphazard ingredients into a coherent, delicious meal – is nothing
short of magic.</p>
<p>Here are a few meals we’ve made together that I’d like to
remember.</p>
<h2 id="farmers-market-mushroom-pasta">farmers market mushroom
pasta</h2>
<em>2020-Oct-17</em>
<details>
<summary>
behind the recipe
</summary>
<p>We had just picked up fresh <a
href="https://www.montereybayfarmers.org/markets-hours/carmel-farmers-market/carmel-vendors/pensi-pasta-company-carmel">porcini
mushroom pasta</a> from the local farmers market. Such a fine ingredient
required a worthy recipe to go with it. What we cooked was inspired by
<a
href="https://www.bonappetit.com/recipe/creamy-pasta-with-crispy-mushrooms">Bon
Appétit’s “Creamy pasta with crispy mushrooms”</a>. Instead of oil,
Camille chose to cook the mushrooms in butter because “mushrooms and
butter belong together.”</p>
<p>Before she cooked the <a
href="https://en.wikipedia.org/wiki/Allium">alliums</a>, Camille had the
idea that this dish would be great with Alison Roman’s crispy
breadcrumbs from her <a
href="https://cooking.nytimes.com/recipes/1020173-creamy-cauliflower-pasta-with-pecorino-bread-crumbs">cauliflower
pasta recipe</a>. So, after the mushrooms were crisped, she made
that.</p>
<p>We had a few fall vegetables on hand we thought would be good on the
side: delicata squash and romanesco (or, as I prefer to call it,
“self-similar broccoli”). We decided to roast them while we made the
rest of the meal. Little did we know that the veg would combine with the
pasta and sauce oh so well.</p>
<p>The cream sauce was simple: cream, alliums, and pasta water. We
finished cooking the pasta in the sauce. The rest was a matter of
combining the elements – roasted veggies, pasta with sauce – finished
with fresh-chopped parsley and those cheesy, crispy bread crumbs. We
added a glass of rosé, and called it a night.</p>
</details>
<div class="pa-gallery-player-widget"
data-link="https://photos.app.goo.gl/mJ4LYW3Vp8TKij317"
data-title="farmers market mushroom pasta"
data-description="pasta dinner after a trip to the local farmer&#39;s market"
data-background-color="#1f2520" data-delay="4">
<p><object data="https://lh3.googleusercontent.com/FMSV4TfcAtVggVHtTpFepbPkGLtZU-GwDobQEc7EP03be9i7iL-5bdpXKQE4NGN3ZkcJ3zQbRZfGjB4USSJuz231y64fiIqT6d-XpNOz0SW5yF5_bQKprfxhdIv26ya17kMNWMeXCGI=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/a91bBpLHIQBRI9fJ3qrYT1mWQiftWIOho4WjdueH1ZAKhx4cfsN5csgQsbIwJAJdz8-4Ksm2aGWGdSNVAA37e72cgtpnckYz9OlMMqu0uOarxrbA_d6z6wjiudrhLGv5UitLv9vk42s=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/u7jwi6FKROhMpwDu-XqXkesC8Eghrr7WZvBkFRjX-ZskzFURBL5a1fRiopTTq0rBZXK_lquO0h409weXCIEN22JDJygIvwruBYjENkRd4F7LQtzWoEYfB9qwHjxarKQ7tM1YYF7TtKk=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/ncfm9LQMqmP3YwDWTPJIF4yBz1ehQuMtLJhEnms37AXx0_v8zPW0C6CTkhYhWqqpPQRo-d8I-2JtL-yMH_PhZiMikIqvLPeJoFkrWzssTkltDZcmiuEdWBbcRUAIVmZU1lXSVTulhw0=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/CJFoq0VaqQO-JJv-ipBWJaYZ1ca0LG8I1lP8KoI_hsmejS58kTRf7iCnyF7oInMnrPdy0LSEGlo6CD_XCgMCMsAsUHGAMxAVJQaislL1qZ9obgC7mIdnwBAErFgabqr2SPqzGI6hzGg=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/H45UWSIjC0683jYNrMhcHdJNYGfnNal7fmAuNsQ5_9v0SMw1imYFJoypAhuBa0OaHrVMpSD7X-yX_XGJu1IeBugp_Pah4j0uwxcNJr6YSCqyTDiDBdB52Tlw98u6EZ4GeqsRekX2gnI=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/w6VeI-Pe69ec0SbnED6bipE1o4mfaqeP2aamPHrCepIYoS7sM0gvfPLshkArdrYXYQ2QEevukkrhdCc_TExQ735cdnnaFxNbIL3H6O_MbX3ObB73BlG2ijxF8Xju3Ar9gKwYZjlWyC8=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/cwgVHhBeA-x6I-PmvMQg4b-PO6FdVL9K1d2I_LOh0YfkjI4kcVp65HMaHNKN62NuKp_HuhiRBPnePUqgmuxnEkWiaeGMMR1mkxQvqLoRQn6zhRbyyQZrk2LwFJd3t7pYw5MnjiK-f4I=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/kcRbJzzs3s5mLU4VflE-5arX1Q1grcdNyohuyGyaY8sovK5nl7_8LCn_7XEkTF2h08AHTrGFOPRunzfWpDOiM37XGK01rQtz1cbox7MQs1Bhla5B15RJbh-FTaxUFNYPh8N65GaznoA=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/MPZ35gIWYHngDldMziSxNqNJRapKBkraaSTM88g6Otperi5aSBiu7C_l33YDmvs2PkbJN0hI82OiYEOofjknsfjFxU6UskL_1M3EeGJ5WCf-4712PvvMvMrXvHEbbC52HJEfqNuqKoI=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/0Yn9qG0loOTLIXj1QqoKPbDbp18BppdSyinbOJCVkI128GOqKe62iPv5mnQ9W1MWE8KvxTlYyN4fBKiOvFELI6FzHK0q8nJX5ovXfiqdh5tVSSp__wdH4OMOkvG8vYWzOtI1o_-zavU=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/yjbfhmVHTFSndGY4DMeIj_ZOUj5PQlj9P-st2jqwnK638ullwar8-bU3DLpkBPRYzVprnq7lHP3h5tv7maHOIGDr3AcqhkxYQL1l06iB9KxSOwdTPwQj49oKacf8qRUn7GjdFXF1FBg=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/YC1Y87uE2jkkrJ8z_rVaN-ArUXowO4awQJQG-XA9vyx3W3BPYzbvxYucvuhs2b2rFC8qElI1ul7_JyYiaS2kCDonn1cvGoXd7VC53ltYrby7OtbXrd7dBaK0JPxsN5j1LwFgIiXg_uA=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/fI_6BimAd6FdWu5xlYjZ0i595t2V3oslB0ZcNhObQXpfIdg2s0VskxrQ8TKOjzNvLzZMZMwiZq4-nwDFvq9zm6PpfuPAJ50kTa9sCLmye1-he1IqHleDgcG60x6d3eLW-z2GlJS1GPg=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/cWRxa1KQKypNKvPAs7gMcjaelfqjG3UyuflLCaHnFj50Vh71yOl_75yEChJCyYdsNZEsP1R7bWJ8zM0hQnqWwyuF-k6lDSfgqDMd86Ttd7P1nySe6SNmPyCTxOqfjDUY8a77bxxXC9A=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/fh7ulGgL6RvM9ZchrQ__c58SjmCyRDW3gdmCU_fEBV3Crm8bB2MIyEM8z81jfNC6OwmNydZvr4ToKU0W5WvfWF6Rt715WwkdWe2bKKIjg3PxDGOcyIu6WGpSdkBtavyf9J42DORKZ1Q=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/ZAG6kSI7tXTPANKGZsgto3UZaBHw2y6BD6oNf541eFJDewAD6IvlBGwzH3lTJnYxnXQxBIGpJEjxRCqcRkGhdZUmy_CrClkVRdiWo9rG1s-HXhXmyPYvjZv0Kknu_e0_4uk16FoQTuY=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/5rXYdpN-zWlXwXC20NZbhsyNftke-p5RJ9VOBVpaWcbkQmzPAchS-A3uPYsg0kjD6r2srP-AX6C5P6qOhOEnVVkChb88YvjN5K3L5glmzT0mE6mtwMtgs0TLZ_8WGhsQ5DUHVOhauJg=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/olDL-Hqlr_lIY1ufLw82mC1i-JyNZv7zBrdMPvYFql01Om6OmCj1lLiKWB8_QtvqK5xW1PZzyt2dtSNUF6dwN3BeuuRQ2yOtHQ23-1KY1ZVvnatZWae_Rr-oWGHQ84I07As0p1ioAs0=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/vhE471qYmDqQ9WskPH7h-tiKgtzp62f4yxOKc7v4G0SE-H-WTEiAKegNoy9fL-i4W5tkyho7nMie7we3Ad78L0YIfdeI3sq904LhXIem9b9ScvGlxsxlUcGl0LjxuSiKjTFvIYX1JuU=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/p5OuEvIP7nNYciC_IKZ8jAzIL8At8PpwWmVFLP8b4sIyA9FI5mvRqsZxxyVGagvHMB-cT-l6GqufuNsKHOgNbCLqLZsdEkdwZRJUGoUAwBZ_q22u5V43g0-_Aw4KQ6P9bT5W4ThZew8=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/n6tdGn6nHkl9AdV0bxcn1DGxE5WFIrDg0ka1tUeMjf9PRQkHUpY88cAW2k6OikmOWei3UAAPTj62mv5B9b1PgNWE9Lh9iJMiJrDYDnUrfy9JYJqimaakGeZYGIGt1IzBINFks5WrI_E=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/rTIcjdpfyT5cl-ABVPLdhCWKMgxyIxJnrxegBCi9B4DNG5hfD4ishWyC7Bekin84R3tseIe6h-3G_Dc-Nm3itJCpUbVjBjpuV4uWKI503PA7q0hd-1vG76vFrGeQnKLmaoI3SB-YOuk=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/bw0OHnNzbrfkiU0IMiIjMXXVLHC4qzxqBSaYThDolHrWuyNfZL7HPI_pU52PXPNvGLaGEmRlOVkQhQqi5IvxVAeSzEELcKDmtFaiWVzmTwU5oUbkGqDw9nbMZx50Gw_5QDI-9h7UdHw=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/8MMOKjfpRtUyixYQQpo32rreEOcz1SOAyxpW1E4mV16jjelje8Io19j3kQvryqgSgRdtSvnbE4GDkHAgbWwJaUz5oKIAz3FILyr2K4oayryomO72BR0JmlCVTRFbahYrpjR7JgYb244=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/oqAEBeh6o8iBKA77N7ly1IuW2QEO3rIwba0Lb-WU7a3Ge_L7bCZW11B6dlYyw8YWsB_3pLYNRzGN-Uvcxdb8Po8RxlfJ2zPOLj_dxKBC6Z-g_GL3cJelpdUNBkchgvnhUPPxJZpiN3c=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/wA6bMXFM4oOv8EjE9i1QSMMU8y94Nh50nYw57vgKuu_YEjSIyyqJzMSV7HZuypoSHLXn1iv5DZ07A4ATCN5xug6o148wch023uLM35kNufZHS0OI_shN7-ywEKX9W5MRF0sb7S4zkkg=w1920-h1080"></object>
<object data="https://lh3.googleusercontent.com/sldWq1pzaFpRxcQVUHml4B0BuB_3Hg4QmV8s-Aso72ZYtHlxUHP3KPLnK-F9_fnf0KMjkseADPLfB2yi3EZAvrVY0SoFwdx9xYcx1gMj_zG_PRHT3e3hfGuyAv7VLJJaZ75_ixNlj-A=w1920-h1080"></object></p>
</div>
<script src="https://cdn.jsdelivr.net/npm/publicalbum@latest/embed-ui.min.js" async></script>
<!--stackedit_data:
eyJoaXN0b3J5IjpbLTE5MTA5MjA0NTEsLTE2MTM0NzgyNjMsLT
g1OTUyMTI4OF19
-->]]></description>
</item>
<item>
<title>Smoothie</title>
<pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/smoothie/</guid>
<description><![CDATA[<p>I make a smoothie for myself every morning.</p>
<p>One half cut of frozen batteries</p>
<p>AA, AAA, 9-Volt,</p>
<p>You can have just one variety, too.</p>
<p>Add three-fourths cup of bleach</p>
<p>to make it easier to blend,</p>
<p>less if you like a thinker gulp.</p>
<p>Fresh plastic adds easy petroleum</p>
<p>that you can’t taste, and a</p>
<p>good green color, to boot.</p>
<p>Some say local spider pollen</p>
<p>helps with your allergies,</p>
<p>but I can’t say it’s worked for me.</p>]]></description>
</item>
<item>
<title>Chipping Away Writer’s Block</title>
<pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/chipping-away-writers-block/</guid>
<description><![CDATA[<p>I had a conversation a few weeks ago with my
project manager, <a href="https://github.com/seefeldb">Bernhard
Seefeld</a>, about strategies to combat writer’s block. At the time, I
had been taking longer than I would like to write documentation. I asked
him how he deals with writer’s block. He gave me some great advice,
which I thought was worthy of sharing.</p>
<h2 id="cant-start-a-draft-send-an-email">Can’t start a draft? Send an
email</h2>
<p>A crafty use of psychology: sitting down and <em>writing</em> can
seem like such a drag. Can’t you just briefly <em>explain</em> the idea
to someone? Why not pretend to (or actually) <a href="emails.md">send
someone an email</a> where you talk about what you’re going to
write.</p>
<p>Viola! You have your first draft.</p>
<h2 id="draw-a-diagram-convert-it-to-text">Draw a diagram, convert it to
text</h2>
<p>Sometimes, the linear nature of writing gets in the way of the
expression of your ideas.</p>
<p>People will <em>read</em> your idea from start to finish, but that
often is not the way you <em>think</em> of an idea.</p>
<p>Drawings become your friend: with them, you’re not bound to write any
portion that is uninspired or follow any order. Berni finds that they
help communicate the relationships between ideas.</p>
<p>You reach a full expression of a though faster with diagram than
paragraphs.</p>
<p>Once you’ve mapped your concept into two dimensions, you’ll have an
easier time describing it in text.</p>
<h2 id="modular-storytelling">Modular Storytelling</h2>
<p>Since we had been talking about documentation, Berni introduced me to
the idea of <a
href="https://www.duarte.com/slidedocs/">SlideDocs</a>.</p>
<p>TL;DR: Instead of traditional documents, the medium is slides;
Instead of a presentation, they are used as reference material.</p>
<p>There are a few aspects of SlideDocs that strike me as valuable.
First, I like how each slide covers only one concept. This is helpful
both in the construction and consumption of the deck. The slide is
organized into a format of increasing levels of depth: the title
contains the core idea, diagrams another layer, and small print provides
full information. Then, concepts can be interchanged within the deck in
a modular fashion.</p>
<p>The second thing that I really like about slide decks is that the
format easily flows into a narrative. Since it relies on the more
familiar form factor of a presentation, the writer is more likely to
tell a story. Though ultimately, everything gets read, the creator is
more likely to “speak” to the reader.</p>
<p>Even if you’re not writing documentation, there’s valuable lessons to
gleam from their model. If you organize ideas into bite-sizes units,
writing becomes an exercise of arrangement and filling in the details
(see slide 44 onward). Further, writing becomes easier if you realize
that you are not writing in a vacuum, but communicating to
<em>somebody</em>, down the line.</p>]]></description>
</item>
<item>
<title>Getting Back My Domain</title>
<pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/getting-back-my-domain/</guid>
<description><![CDATA[<p>Well, here’s a very meta story about this
website and how I’ve grown since I started it.</p>
<p>Let’s talk about an issue that has bugged me for quite some time and
the annoying maze I had to get out of to fix it.</p>
<p>Check out the URL of this domain. Is it secure? How do you know? Let
me show you how <em>I</em> know it’s not, as of writing:</p>
<figure>
<img src="assets/alex-is-not-secure.webp"
title="A URL bar with no HTTPS support"
alt="My site does not use HTTPS, and therefore is not secure" />
<figcaption aria-hidden="true">My site does not use HTTPS, and therefore
is not secure</figcaption>
</figure>
<p>“How embarrassing. A software engineer who doesn’t know how to set up
HTTPS for his own personal site.”</p>
<p>When I started this site in 2017, that was the case. At least, I was
focused on getting something up and running quickly, and snoozed on
adding that feature. Like most of software engineering, building things
outside of your current ability is just a matter of Googling it and
following directions.</p>
<p>As time has gone on, I’ve kept postponing this feature, despite <a
href="https://github.blog/2018-05-01-github-pages-custom-domains-https/">learning
how to implement it</a>. I’ve avoided addressing anything to do with my
domain due to a completely avoidable predicament that I got myself into
all in the name of “security”. Here I am today, writing support tickets
to sort it all out.</p>
<hr />
<p>When I was younger, I found this free Chrome extension that would
provide me piece-of-mind while web-browsing. It was called MaskedMe, and
the general idea was it helped you control spam and prevent hacking. It
did this by generating a fake email address per website, and
automatically forwarding all the emails to your real address.</p>
<p>“Great!” I thought. “I can’t be subject to a <a
href="https://xkcd.com/792/">password-reuse attack</a> if every email I
use is different, right?”</p>
<p>It had additional services, totally for free, for replacing phone
numbers and credit cards, so you never had to give up personal
information. So I replaced a lot of information on various accounts with
generated emails, cell phone numbers, and credit cards.</p>
<p>Sometime around the end of high school or early college, after
adopting MaskMe, I thought to myself, “I should buy my personal domain
before <a
href="https://www.facebook.com/public/Alex-Rosengarten">another Alex
Rosengarten</a> beats me to it.”</p>
<p>So I did. But I had the <em>brilliant</em> idea to make the account
holding my domains as anonymous as possible. You know, just in case I
wanted to buy <em>other</em> domains where I would <em>need</em>
anonymity (spoiler: this never happened). I filled out my account
information without my actual email, name, or phone number, but with a
real credit card.</p>
<p>Fast forward several years.</p>
<p>I somehow get into my domain name service (Namecheap) and wire up my
domain to point to Github pages. I set up a quick, custom jekyll blog,
autopay for my domain every year, and never have to log into the domain
name service for any reason.</p>
<p>Fast forward, later still.</p>
<p>I’ve gained maturity as a developer and know my way around cloud
technologies (like GCP and AWS). I’m motivated to consolidate my tools
on to one platform so I can build more advanced things. To this end, I
attempt to log on to Namecheap, which should be easy because I actually
remember my username and password. I enter those pieces of information.
Then, I hit the next screen:</p>
<figure>
<img src="assets/namecheap-mfa-masked.webp"
title="A MFA screen showing my MaskedMe phone number"
alt="I have to wait on a text to a phone number I don’t control" />
<figcaption aria-hidden="true">I have to wait on a text to a phone
number I don’t control</figcaption>
</figure>
<p>Ok. This is <em>annoying</em>, but not too big of a problem. I’ll
just log into my MaskedMe account, get the multi-factor authentication
(MFA) code, and move along.</p>
<p>A Google search gets me <a href="https://www.abine.com/">here</a>:
Apparently MaskMe has re-branded as Abine, offering two services: Blur
(same services as MaskMe) and DeleteMe, a way to scrub your online
footprint off the web.</p>
<p>“That’s fine”, I thought. “They’ll have all my account information in
tact.”</p>
<p>Spoiler: They didn’t.</p>
<p>Apparently, masked credit cards and phone numbers have become part of
their <em>premium</em> services.</p>
<p>From here, I took several approaches to recover this proxy cell
number. I filed a support ticket (longer wait for free customers). I
called their support phone line (a dead end loop that tells you to email
them). I even tried to sign up for premium – for some reason, my
attempts to upgrade failed every time (likely because my data was stale,
they built their service around new customers instead of maintaining
connections for old ones).</p>
<p>Eventually, I got a hold of Abine support. They said that after a
long enough period of inactivity, they deprecate text message proxies.
This means that there was no way that I could access the MFA number, and
was likely permanently locked out of my Namescheap account.</p>
<p>This sucked a lot. Not only was I unable to maintain, upgrade, or
configure my domain, I risked losing it after my credit card expired and
ceased payments.</p>
<p>The next lever I had left to pull was contacting Namecheap support.
In my first conversation with their live help chat service, I saw a
glimmer of hope: Their customer service members could override MFA
temporarily if I could prove ownership of the account. This glimmer was
extinguished soon, however, when I learned that to identify me, they
needed the phone number on the account.</p>
<p>With nothing left to do, I filed a ticket at their risk management
team, hoping that they could help me. If that failed, my hail mary
option was to modify the content of my website, proving that it was
really me after all.</p>
<p>A day later, they got back to me. Without the phone number, they
could do nothing for me.</p>
<hr />
<p>I have not missed the great, dual irony of the situation:</p>
<ul>
<li>I used a series of indirections to remain anonymous… to publicize
myself on the internet.</li>
<li>The security measures I took… made me more vulnerable and less in
control.</li>
</ul>
<p>“Congratulations,” <a href="http://camille.merose.com">my partner</a>
told me. “You played yourself.”</p>
<p>Thanks, hun.</p>
<p>Over the next few days, I searched my email and other records for
traces of that number with no success. I knew that this was a futile
effort, but I did it anyway out of desperation.</p>
<p>Then, I had an idea. When I originally created my account, I paid for
extra services to make sure that any identifying data about the domain
wouldn’t be publicly listed. I decided to check that anyway, just in
case.</p>
<p>I ran a query via Whois.org –</p>
<p>“There it is!” I discovered.</p>
<p>Apparently, I had only paid for a year’s worth of this service. It
had expired long ago. But there it was, a phone number ending in
<code>057</code>.</p>
<p>Soon after, I had another live chat with Namecheap customer support.
Before I knew it, I bypassed the MFA.</p>
<hr />
<p>In my younger days, I had an unbalanced sense of trust. I had strong
feelings towards protecting myself online, but no context to correctly
model risk. At the time, I didn’t know of the importance of certain
choices – like how <a href="https://doesmysiteneedhttps.com/">important
HTTPS is for web browsing</a>. I also neglected to consider the
longevity of other choices. I needed to ask myself, “how dependable are
the tools I choose to rely on?”</p>
<p>Further, this situation could have been avoided if I performed
regular maintenance. The logic I practiced was akin to the idea that you
can’t fall victim to a phishing attack if you never check email. Or, it
was always tomorrow Alex’s problem. Now that I’m in a less turbulent
time in my life, I can work on minimizing my digital footprint and
tending to my virtual garden.</p>
<p>In addition to risk assessment and orderliness, this experience has
been a great lesson in skepticism. Before, I thought I needed to be
robust against human adversaries. As I’ve matured, it’s clear that I
need to be robust against human error.</p>]]></description>
</item>
<item>
<title>In Defense of Interruptions</title>
<pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/in-defense-of-interruptions/</guid>
<description><![CDATA[<p>Many believe that the <a
href="https://heeris.id.au/2013/this-is-why-you-shouldnt-interrupt-a-programmer/">global
minimum number of interruptions</a> is good for software development. I
disagree. Interruptions are inevitable and often useful.</p>
<h2 id="interruption-is-a-slur-for-collaboration">“Interruption” Is A
Slur For Collaboration</h2>
<p>Interruptions are inevitable. In typical agile shops, there are
stand-ups, sprint-plannings, retrospectives, and other corporate
meetings. Communication takes place on Slack, HipChat, and the like. To
butcher Kurt Vonnegut, being anti-interruptions “is like being
anti-glacier.”</p>
<p>But, are interruptions all bad? No!</p>
<p>In fact, in the cases listed here, they are merely the realities in
working in a collaborative environment <sup id="a1"><a
href="#f1">1</a></sup>. Can we not lend 15 minutes to perform a code
review for a colleague? Should we skip answering a question from an
intern because it would interrupt our current work?</p>
<p>Even if meetings are a drag<sup id="a2"><a href="#f2">2</a></sup> and
you don’t have any of the aforementioned, would you permit being
interrupted for a <code>P0</code> bug? Of course!</p>
<p>I think we should celebrate interruptions rather than demonize them.
Yes, retrospectives are valuable even though I haven’t finished my
current story. Of course, I will teach you about mime types, rising
sophomore intern, instead of just using the term in context. Give me a
minutes to finish what I’m typing<sup id="a3"><a href="#f3">3</a></sup>,
but then <em>yes</em>, I’ll review your PR.</p>
<p><code>&lt;/rant&gt;</code></p>
<hr />
<p><b id="f1">1</b>. Lone Wolf Programmers (noun): extinct or
mythical-beasts. <a href="#a1">↩︎</a></p>
<p><b id="f2">2</b>. I like the advice of setting agendas
<em>before</em> meetings and ending early when possible. <a
href="#a2">↩︎</a></p>
<p><b id="f3">3</b>. I hope it’s evident by context that I’m not taking
“interruptions” to their semantic extreme. <a
href="#a3">↩︎</a></p>]]></description>
</item>
<item>
<title>Higher Order Functions on Pandas Dataframes</title>
<pubDate>Tue, 31 Jul 2018 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/higher-order-functions-on-pandas-dataframes/</guid>
<description><![CDATA[<p>(Note: the following article is unedited –
Proceed with caution).</p>
<p>(Last updated: 2018-07-31)</p>
<h2 id="motivation">Motivation</h2>
<p>I wrote this article to capture a perspective on dataframes that I
think most Python developers – especially data scientists –
overlook.</p>
<p>Working closely with data often lends itself to tight coupling to the
structure of that data. With this comes messy, brittle code.</p>
<p>I contend that there is a better way; a way that promotes modular,
flexible, and testable code; a method where we can automate away the
boring parts and think clearly about the problem at hand.</p>
<p>The core idea is to promote re-use of logic through composition. To
this end, we treat functions as data. We must also try as much as
possible to abstract away the nonessential details of each
operation.</p>
<p>I’m getting ahead of myself. It’s better to <em>show</em> rather than
<em>tell</em>. Let’s explore the thought process of refactoring the
standard method for querying data in Pandas.</p>
<h2 id="the-conventional-way">The Conventional Way</h2>
<p>The Pandas documentation explains the similarities between their API
and SQL for querying tabular data. A SQL query with a compound
<code>WHERE</code> clause, for instance, can be expressed as
follows:</p>
<div class="sourceCode" id="cb1"><pre
class="sourceCode sql"><code class="sourceCode sql"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co">-- tips of more than $5.00 at Dinner meals</span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="kw">SELECT</span> <span class="op">*</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="kw">FROM</span> tips</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="kw">WHERE</span> <span class="dt">time</span> <span class="op">=</span> <span class="st">&#39;Dinner&#39;</span> <span class="kw">AND</span> tip <span class="op">&gt;</span> <span class="fl">5.00</span>;</span></code></pre></div>
<p>The equivalent Pandas syntax is as such:</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="co"># tips of more than $5.00 at Dinner meals</span></span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> In [<span class="dv">11</span>]: tips[(tips[<span class="st">&#39;time&#39;</span>] <span class="op">==</span> <span class="st">&#39;Dinner&#39;</span>) <span class="op">&amp;</span> (tips[<span class="st">&#39;tip&#39;</span>] <span class="op">&gt;</span> <span class="fl">5.00</span>)]</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>     total_bill    tip     sex smoker  day    time  size</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a><span class="dv">23</span>        <span class="fl">39.42</span>   <span class="fl">7.58</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a><span class="dv">44</span>        <span class="fl">30.40</span>   <span class="fl">5.60</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="dv">47</span>        <span class="fl">32.40</span>   <span class="fl">6.00</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="dv">52</span>        <span class="fl">34.81</span>   <span class="fl">5.20</span>  Female     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="dv">59</span>        <span class="fl">48.27</span>   <span class="fl">6.73</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="dv">116</span>       <span class="fl">29.93</span>   <span class="fl">5.07</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>   <span class="fl">5.14</span>  Female     No  Sun  Dinner     <span class="dv">5</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="dv">170</span>       <span class="fl">50.81</span>  <span class="fl">10.00</span>    Male    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="dv">172</span>        <span class="fl">7.25</span>   <span class="fl">5.15</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb2-13"><a href="#cb2-13" aria-hidden="true" tabindex="-1"></a><span class="dv">181</span>       <span class="fl">23.33</span>   <span class="fl">5.65</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb2-14"><a href="#cb2-14" aria-hidden="true" tabindex="-1"></a><span class="dv">183</span>       <span class="fl">23.17</span>   <span class="fl">6.50</span>    Male    Yes  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb2-15"><a href="#cb2-15" aria-hidden="true" tabindex="-1"></a><span class="dv">211</span>       <span class="fl">25.89</span>   <span class="fl">5.16</span>    Male    Yes  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb2-16"><a href="#cb2-16" aria-hidden="true" tabindex="-1"></a><span class="dv">212</span>       <span class="fl">48.33</span>   <span class="fl">9.00</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb2-17"><a href="#cb2-17" aria-hidden="true" tabindex="-1"></a><span class="dv">214</span>       <span class="fl">28.17</span>   <span class="fl">6.50</span>  Female    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb2-18"><a href="#cb2-18" aria-hidden="true" tabindex="-1"></a><span class="dv">239</span>       <span class="fl">29.03</span>   <span class="fl">5.92</span>    Male     No  Sat  Dinner     <span class="dv">3</span></span></code></pre></div>
<p><a
href="https://pandas.pydata.org/pandas-docs/stable/comparison_with_sql.html#where">(source)</a></p>
<p>What if we wanted to extend our query with an arbitrary number of
conditions?</p>
<p>Using the standard Pandas syntax, it would look something like
this:</p>
<div class="sourceCode" id="cb3"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips[(tips[<span class="st">&#39;time&#39;</span>] <span class="op">==</span> <span class="st">&#39;Dinner&#39;</span>) <span class="op">&amp;</span> (tips[<span class="st">&#39;tip&#39;</span>] <span class="op">&gt;</span> <span class="fl">5.00</span>) <span class="op">&amp;</span></span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>...      (tips[<span class="st">&#39;sex&#39;</span>] <span class="op">==</span> <span class="st">&#39;Female&#39;</span>)  <span class="op">&amp;</span> (tips[<span class="st">&#39;smoker&#39;</span>] <span class="op">==</span> <span class="st">&#39;No&#39;</span>)]</span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a>     total_bill   tip     sex smoker  day    time  size</span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="dv">52</span>        <span class="fl">34.81</span>  <span class="fl">5.20</span>  Female     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>  <span class="fl">5.14</span>  Female     No  Sun  Dinner     <span class="dv">5</span></span></code></pre></div>
<p>This does not seem ideal. Our line of code quickly gets longer as we
add more filtering logic. A lot of logic is repeated – namely, we keep
referring to the <code>tips</code> dataframe over and over. What if the
dataframe name changed? Or we wanted to apply the same query to another,
similar table?</p>
<p>This would double our work: We would need to re-write the whole line
substituting one variable name for the other. Or worse, we could swap
the data each variable refers to.</p>
<p>How can we provide a more succinct interface for querying data? How
can we make sure that it is intuitive, general, and correct?</p>
<h2 id="breaking-down-the-problem">Breaking Down The Problem</h2>
<p>Let’s break down what’s going on in the above query:</p>
<div class="sourceCode" id="cb4"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_dinner_time <span class="op">=</span> (tips[<span class="st">&#39;time&#39;</span>] <span class="op">==</span> <span class="st">&#39;Dinner&#39;</span>)</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_dinner_time.head()</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>    <span class="va">True</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>    <span class="va">True</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>    <span class="va">True</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>    <span class="va">True</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>    <span class="va">True</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>Name: time, dtype: <span class="bu">bool</span></span>
<span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_dinner_time.value_counts()</span>
<span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a><span class="va">True</span>     <span class="dv">176</span></span>
<span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a><span class="va">False</span>     <span class="dv">68</span></span>
<span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>Name: time, dtype: int64</span>
<span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_tip_above_five <span class="op">=</span> (tips[<span class="st">&#39;tip&#39;</span>] <span class="op">&gt;</span> <span class="fl">5.00</span>)</span>
<span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_tip_above_five.head()</span>
<span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>    <span class="va">False</span></span>
<span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>    <span class="va">False</span></span>
<span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>    <span class="va">False</span></span>
<span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>    <span class="va">False</span></span>
<span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>    <span class="va">False</span></span>
<span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>Name: tip, dtype: <span class="bu">bool</span></span>
<span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_tip_above_five.value_counts()</span>
<span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a><span class="va">False</span>    <span class="dv">226</span></span>
<span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="va">True</span>      <span class="dv">18</span></span>
<span id="cb4-24"><a href="#cb4-24" aria-hidden="true" tabindex="-1"></a>Name: tip, dtype: int64</span>
<span id="cb4-25"><a href="#cb4-25" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="co"># etc...</span></span></code></pre></div>
<p>Ah! So what’s actually going on is we are taking advantage of
dataframe’s capacity for <a
href="https://pandas.pydata.org/pandas-docs/stable/10min.html#boolean-indexing">boolean
indexing</a>.</p>
<p>What if we could use this to abstract away which dataframe we are
acting on? Certainly, we’d prefer to only focus on the filtering logic
rather than housekeeping. Plus, we might like to reuse the query on
different dataframes.</p>
<p>Let’s try this:</p>
<div class="sourceCode" id="cb5"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_dinner_time <span class="op">=</span> <span class="kw">lambda</span> df: df[<span class="st">&#39;time&#39;</span>] <span class="op">==</span> <span class="st">&#39;Dinner&#39;</span></span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_tip_above_five <span class="op">=</span> <span class="kw">lambda</span> df: df[<span class="st">&#39;tip&#39;</span>] <span class="op">&gt;</span> <span class="fl">5.00</span></span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips[is_dinner_time(tips) <span class="op">&amp;</span> is_tip_above_five(tips)]</span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>     total_bill    tip     sex smoker  day    time  size</span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="dv">23</span>        <span class="fl">39.42</span>   <span class="fl">7.58</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="dv">44</span>        <span class="fl">30.40</span>   <span class="fl">5.60</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="dv">47</span>        <span class="fl">32.40</span>   <span class="fl">6.00</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="dv">52</span>        <span class="fl">34.81</span>   <span class="fl">5.20</span>  Female     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="dv">59</span>        <span class="fl">48.27</span>   <span class="fl">6.73</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="dv">116</span>       <span class="fl">29.93</span>   <span class="fl">5.07</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>   <span class="fl">5.14</span>  Female     No  Sun  Dinner     <span class="dv">5</span></span>
<span id="cb5-12"><a href="#cb5-12" aria-hidden="true" tabindex="-1"></a><span class="dv">170</span>       <span class="fl">50.81</span>  <span class="fl">10.00</span>    Male    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb5-13"><a href="#cb5-13" aria-hidden="true" tabindex="-1"></a><span class="dv">172</span>        <span class="fl">7.25</span>   <span class="fl">5.15</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb5-14"><a href="#cb5-14" aria-hidden="true" tabindex="-1"></a><span class="dv">181</span>       <span class="fl">23.33</span>   <span class="fl">5.65</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb5-15"><a href="#cb5-15" aria-hidden="true" tabindex="-1"></a><span class="dv">183</span>       <span class="fl">23.17</span>   <span class="fl">6.50</span>    Male    Yes  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb5-16"><a href="#cb5-16" aria-hidden="true" tabindex="-1"></a><span class="dv">211</span>       <span class="fl">25.89</span>   <span class="fl">5.16</span>    Male    Yes  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb5-17"><a href="#cb5-17" aria-hidden="true" tabindex="-1"></a><span class="dv">212</span>       <span class="fl">48.33</span>   <span class="fl">9.00</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb5-18"><a href="#cb5-18" aria-hidden="true" tabindex="-1"></a><span class="dv">214</span>       <span class="fl">28.17</span>   <span class="fl">6.50</span>  Female    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb5-19"><a href="#cb5-19" aria-hidden="true" tabindex="-1"></a><span class="dv">239</span>       <span class="fl">29.03</span>   <span class="fl">5.92</span>    Male     No  Sat  Dinner     <span class="dv">3</span></span></code></pre></div>
<p>Great. I now have two functions <code>is_dinner_time</code> and
<code>is_tip_above_five</code> which I could use on any other dataframe.
However, I still am repeating the reference to <code>tips</code> as many
times as I did before. How can I get rid of this grunt work? Ideally, I
would like to refer to a dataframe once, mixing in the filter operations
and I see fit.</p>
<h2 id="towards-generalization">Towards Generalization</h2>
<p>Why not use a <a
href="https://en.wikipedia.org/wiki/Higher-order_function">higher-order
function</a>? Functions are first class citizens in python, after all.
Let’s abstract away the rote work of calling these filter functions with
respect to a particular dataframe.</p>
<div class="sourceCode" id="cb6"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="im">import</span> functools</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> intersection(df, <span class="op">*</span>filters):</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>...    mapped_boolean_dfs <span class="op">=</span> [f(df) <span class="cf">for</span> f <span class="kw">in</span> filters <span class="cf">if</span> <span class="bu">callable</span>(f)]</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a>...    accumulated_boolean_df <span class="op">=</span> functools.<span class="bu">reduce</span>(<span class="kw">lambda</span> acc, d: acc <span class="op">&amp;</span> d, mapped_boolean_dfs)</span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a>...    <span class="cf">return</span> df[accumulated_boolean_df]</span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> intersection(tips, is_dinner_time, is_tip_above_five)</span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>     total_bill    tip     sex smoker  day    time  size</span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="dv">23</span>        <span class="fl">39.42</span>   <span class="fl">7.58</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="dv">44</span>        <span class="fl">30.40</span>   <span class="fl">5.60</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="dv">47</span>        <span class="fl">32.40</span>   <span class="fl">6.00</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a><span class="dv">52</span>        <span class="fl">34.81</span>   <span class="fl">5.20</span>  Female     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a><span class="dv">59</span>        <span class="fl">48.27</span>   <span class="fl">6.73</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a><span class="dv">116</span>       <span class="fl">29.93</span>   <span class="fl">5.07</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>   <span class="fl">5.14</span>  Female     No  Sun  Dinner     <span class="dv">5</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a><span class="dv">170</span>       <span class="fl">50.81</span>  <span class="fl">10.00</span>    Male    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a><span class="dv">172</span>        <span class="fl">7.25</span>   <span class="fl">5.15</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a><span class="dv">181</span>       <span class="fl">23.33</span>   <span class="fl">5.65</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a><span class="dv">183</span>       <span class="fl">23.17</span>   <span class="fl">6.50</span>    Male    Yes  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a><span class="dv">211</span>       <span class="fl">25.89</span>   <span class="fl">5.16</span>    Male    Yes  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a><span class="dv">212</span>       <span class="fl">48.33</span>   <span class="fl">9.00</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a><span class="dv">214</span>       <span class="fl">28.17</span>   <span class="fl">6.50</span>  Female    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a><span class="dv">239</span>       <span class="fl">29.03</span>   <span class="fl">5.92</span>    Male     No  Sat  Dinner     <span class="dv">3</span></span></code></pre></div>
<p>Much better. Now, should we want to add additional fields in the
table to filter with, we merely define more filter functions – which,
again, can be used for any table.</p>
<p>Please note that each functions can be as complicated as we want, as
long as they return a dataframe of booleans the same size as the
input.</p>
<p>For example, if we are querying string data that is messy, we could
write a filter like the following:</p>
<div class="sourceCode" id="cb7"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> is_dinner_fuzzy(df):</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>...    <span class="cf">return</span> df[<span class="st">&#39;time&#39;</span>].<span class="bu">apply</span>(<span class="kw">lambda</span> x: fuzz.ratio(x, <span class="st">&#39;dinner&#39;</span>)) <span class="op">&gt;=</span> <span class="dv">90</span></span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> intersection(tips, is_dinner_fuzzy, is_tip_above_five)</span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>     total_bill    tip     sex smoker  day    time  size</span>
<span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a><span class="dv">23</span>        <span class="fl">39.42</span>   <span class="fl">7.58</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a><span class="dv">44</span>        <span class="fl">30.40</span>   <span class="fl">5.60</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a><span class="dv">47</span>        <span class="fl">32.40</span>   <span class="fl">6.00</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a><span class="dv">52</span>        <span class="fl">34.81</span>   <span class="fl">5.20</span>  Female     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a><span class="dv">59</span>        <span class="fl">48.27</span>   <span class="fl">6.73</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a><span class="dv">116</span>       <span class="fl">29.93</span>   <span class="fl">5.07</span>    Male     No  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>   <span class="fl">5.14</span>  Female     No  Sun  Dinner     <span class="dv">5</span></span>
<span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a><span class="dv">170</span>       <span class="fl">50.81</span>  <span class="fl">10.00</span>    Male    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a><span class="dv">172</span>        <span class="fl">7.25</span>   <span class="fl">5.15</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a><span class="dv">181</span>       <span class="fl">23.33</span>   <span class="fl">5.65</span>    Male    Yes  Sun  Dinner     <span class="dv">2</span></span>
<span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a><span class="dv">183</span>       <span class="fl">23.17</span>   <span class="fl">6.50</span>    Male    Yes  Sun  Dinner     <span class="dv">4</span></span>
<span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a><span class="dv">211</span>       <span class="fl">25.89</span>   <span class="fl">5.16</span>    Male    Yes  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a><span class="dv">212</span>       <span class="fl">48.33</span>   <span class="fl">9.00</span>    Male     No  Sat  Dinner     <span class="dv">4</span></span>
<span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a><span class="dv">214</span>       <span class="fl">28.17</span>   <span class="fl">6.50</span>  Female    Yes  Sat  Dinner     <span class="dv">3</span></span>
<span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a><span class="dv">239</span>       <span class="fl">29.03</span>   <span class="fl">5.92</span>    Male     No  Sat  Dinner     <span class="dv">3</span></span></code></pre></div>
<p>(Note: <code>fuzz.ratio()</code> returns an integer representing the
<a href="https://en.wikipedia.org/wiki/Levenshtein_distance">Levenshtein
distance</a> from one string to another)</p>
<h2 id="how-general-can-we-go">How General Can We Go?</h2>
<p>Is our intersection general enough? What if we wanted to query our
data but instead of using a SQL-like <code>AND</code> operation, we
wanted an <code>OR</code> operation?</p>
<p>Let’s generalize further:</p>
<div class="sourceCode" id="cb8"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> filter_reduce(df, <span class="op">*</span>filters, reducer<span class="op">=</span><span class="kw">lambda</span> acc, x: acc <span class="op">&amp;</span> x):</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>...    mapped_dfs <span class="op">=</span> [f(df) <span class="cf">for</span> f <span class="kw">in</span> filters <span class="cf">if</span> <span class="bu">callable</span>(f)]</span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>...    accumulated_df <span class="op">=</span> functools.<span class="bu">reduce</span>(reducer, mapped_dfs)</span>
<span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a>...    <span class="cf">return</span> df[accumulated_df]</span>
<span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> intersection(df, <span class="op">*</span>filters):</span>
<span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>...    <span class="cf">return</span> filter_reduce(df, <span class="op">*</span>filters, reducer<span class="op">=</span><span class="kw">lambda</span> acc, x: acc <span class="op">&amp;</span> x)</span>
<span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> union(df, <span class="op">*</span>filters):</span>
<span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>...    <span class="cf">return</span> filter_reduce(df, <span class="op">*</span>filters, reducer<span class="op">=</span><span class="kw">lambda</span> acc, x: acc <span class="op">|</span> x)</span></code></pre></div>
<p>Then we can represent the following SQL query (from the Pandas
documentation) like so:</p>
<div class="sourceCode" id="cb9"><pre
class="sourceCode sql"><code class="sourceCode sql"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">SELECT</span> <span class="op">*</span></span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a><span class="kw">FROM</span> tips</span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a><span class="kw">WHERE</span> <span class="kw">size</span> <span class="op">&gt;=</span> <span class="dv">5</span> <span class="kw">OR</span> total_bill <span class="op">&gt;</span> <span class="dv">45</span>;</span></code></pre></div>
<div class="sourceCode" id="cb10"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_total_bill_large <span class="op">=</span> <span class="kw">lambda</span> df: df[<span class="st">&#39;total_bill&#39;</span>] <span class="op">&gt;</span> <span class="dv">45</span></span>
<span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> is_party_gte_five <span class="op">=</span> <span class="kw">lambda</span> df: df[<span class="st">&#39;size&#39;</span>] <span class="op">&gt;=</span> <span class="dv">5</span></span>
<span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> union(tips, is_party_gte_five, is_total_bill_large)</span>
<span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>     total_bill    tip     sex smoker   day    time  size</span>
<span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a><span class="dv">59</span>        <span class="fl">48.27</span>   <span class="fl">6.73</span>    Male     No   Sat  Dinner     <span class="dv">4</span></span>
<span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a><span class="dv">125</span>       <span class="fl">29.80</span>   <span class="fl">4.20</span>  Female     No  Thur   Lunch     <span class="dv">6</span></span>
<span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="dv">141</span>       <span class="fl">34.30</span>   <span class="fl">6.70</span>    Male     No  Thur   Lunch     <span class="dv">6</span></span>
<span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a><span class="dv">142</span>       <span class="fl">41.19</span>   <span class="fl">5.00</span>    Male     No  Thur   Lunch     <span class="dv">5</span></span>
<span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a><span class="dv">143</span>       <span class="fl">27.05</span>   <span class="fl">5.00</span>  Female     No  Thur   Lunch     <span class="dv">6</span></span>
<span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a><span class="dv">155</span>       <span class="fl">29.85</span>   <span class="fl">5.14</span>  Female     No   Sun  Dinner     <span class="dv">5</span></span>
<span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a><span class="dv">156</span>       <span class="fl">48.17</span>   <span class="fl">5.00</span>    Male     No   Sun  Dinner     <span class="dv">6</span></span>
<span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a><span class="dv">170</span>       <span class="fl">50.81</span>  <span class="fl">10.00</span>    Male    Yes   Sat  Dinner     <span class="dv">3</span></span>
<span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a><span class="dv">182</span>       <span class="fl">45.35</span>   <span class="fl">3.50</span>    Male    Yes   Sun  Dinner     <span class="dv">3</span></span>
<span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a><span class="dv">185</span>       <span class="fl">20.69</span>   <span class="fl">5.00</span>    Male     No   Sun  Dinner     <span class="dv">5</span></span>
<span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a><span class="dv">187</span>       <span class="fl">30.46</span>   <span class="fl">2.00</span>    Male    Yes   Sun  Dinner     <span class="dv">5</span></span>
<span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a><span class="dv">212</span>       <span class="fl">48.33</span>   <span class="fl">9.00</span>    Male     No   Sat  Dinner     <span class="dv">4</span></span>
<span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a><span class="dv">216</span>       <span class="fl">28.15</span>   <span class="fl">3.00</span>    Male    Yes   Sat  Dinner     <span class="dv">5</span></span></code></pre></div>
<p>Sure, we could have implemented the <code>union</code> and
<code>intersection</code> cases by themselves, but the function
<code>filter_reduce</code> offers us the luxury of adaptability later
on.</p>
<h2 id="beyond-querying">Beyond Querying</h2>
<p>Can this perspective help with other problems besides querying?</p>
<p>Often, we need to mutate dataframes. We might want to add a column of
derived values, or change a column’s data type. Mutability, however,
comes with several challenges: What if we make a mistake when mutating
the dataframe, and we would like to revert to the previous form? What if
we wanted to know what the original data looked like?</p>
<p>In Pandas, we can simulate immutability by creating mapping functions
that first perform a shallow copy of the input dataframe and return a
new result.</p>
<div class="sourceCode" id="cb11"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb11-1"><a href="#cb11-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> add_subtotal(df):</span>
<span id="cb11-2"><a href="#cb11-2" aria-hidden="true" tabindex="-1"></a>...     cp <span class="op">=</span> pd.DataFrame(df, copy<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb11-3"><a href="#cb11-3" aria-hidden="true" tabindex="-1"></a>...     cp[<span class="st">&#39;subtotal&#39;</span>] <span class="op">=</span> cp[<span class="st">&#39;total_bill&#39;</span>] <span class="op">-</span> cp[<span class="st">&#39;tip&#39;</span>]</span>
<span id="cb11-4"><a href="#cb11-4" aria-hidden="true" tabindex="-1"></a>...     <span class="cf">return</span> cp</span>
<span id="cb11-5"><a href="#cb11-5" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips1 <span class="op">=</span> add_subtotal(tips)</span>
<span id="cb11-6"><a href="#cb11-6" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips1.head()</span>
<span id="cb11-7"><a href="#cb11-7" aria-hidden="true" tabindex="-1"></a>   total_bill   tip     sex smoker  day    time  size  subtotal</span>
<span id="cb11-8"><a href="#cb11-8" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>       <span class="fl">16.99</span>  <span class="fl">1.01</span>  Female     No  Sun  Dinner     <span class="dv">2</span>     <span class="fl">15.98</span></span>
<span id="cb11-9"><a href="#cb11-9" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>       <span class="fl">10.34</span>  <span class="fl">1.66</span>    Male     No  Sun  Dinner     <span class="dv">3</span>      <span class="fl">8.68</span></span>
<span id="cb11-10"><a href="#cb11-10" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>       <span class="fl">21.01</span>  <span class="fl">3.50</span>    Male     No  Sun  Dinner     <span class="dv">3</span>     <span class="fl">17.51</span></span>
<span id="cb11-11"><a href="#cb11-11" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>       <span class="fl">23.68</span>  <span class="fl">3.31</span>    Male     No  Sun  Dinner     <span class="dv">2</span>     <span class="fl">20.37</span></span>
<span id="cb11-12"><a href="#cb11-12" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>       <span class="fl">24.59</span>  <span class="fl">3.61</span>  Female     No  Sun  Dinner     <span class="dv">4</span>     <span class="fl">20.98</span></span>
<span id="cb11-13"><a href="#cb11-13" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> add_avg_bill(df): </span>
<span id="cb11-14"><a href="#cb11-14" aria-hidden="true" tabindex="-1"></a>...     cp <span class="op">=</span> pd.DataFrame(df, copy<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb11-15"><a href="#cb11-15" aria-hidden="true" tabindex="-1"></a>...     cp[<span class="st">&#39;price_per_person&#39;</span>] <span class="op">=</span> cp[<span class="st">&#39;subtotal&#39;</span>] <span class="op">/</span> cp[<span class="st">&#39;size&#39;</span>]</span>
<span id="cb11-16"><a href="#cb11-16" aria-hidden="true" tabindex="-1"></a>...     <span class="cf">return</span> cp</span>
<span id="cb11-17"><a href="#cb11-17" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips2 <span class="op">=</span> add_avg_bill(tips1)</span>
<span id="cb11-18"><a href="#cb11-18" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips2.head()</span>
<span id="cb11-19"><a href="#cb11-19" aria-hidden="true" tabindex="-1"></a>   total_bill   tip     sex smoker  day    time  size  subtotal  <span class="op">\</span></span>
<span id="cb11-20"><a href="#cb11-20" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>       <span class="fl">16.99</span>  <span class="fl">1.01</span>  Female     No  Sun  Dinner     <span class="dv">2</span>     <span class="fl">15.98</span>   </span>
<span id="cb11-21"><a href="#cb11-21" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>       <span class="fl">10.34</span>  <span class="fl">1.66</span>    Male     No  Sun  Dinner     <span class="dv">3</span>      <span class="fl">8.68</span>   </span>
<span id="cb11-22"><a href="#cb11-22" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>       <span class="fl">21.01</span>  <span class="fl">3.50</span>    Male     No  Sun  Dinner     <span class="dv">3</span>     <span class="fl">17.51</span>   </span>
<span id="cb11-23"><a href="#cb11-23" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>       <span class="fl">23.68</span>  <span class="fl">3.31</span>    Male     No  Sun  Dinner     <span class="dv">2</span>     <span class="fl">20.37</span>   </span>
<span id="cb11-24"><a href="#cb11-24" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>       <span class="fl">24.59</span>  <span class="fl">3.61</span>  Female     No  Sun  Dinner     <span class="dv">4</span>     <span class="fl">20.98</span>   </span>
<span id="cb11-25"><a href="#cb11-25" aria-hidden="true" tabindex="-1"></a>   price_per_person  </span>
<span id="cb11-26"><a href="#cb11-26" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>          <span class="fl">7.990000</span>  </span>
<span id="cb11-27"><a href="#cb11-27" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>          <span class="fl">2.893333</span>  </span>
<span id="cb11-28"><a href="#cb11-28" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>          <span class="fl">5.836667</span>  </span>
<span id="cb11-29"><a href="#cb11-29" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>         <span class="fl">10.185000</span>  </span>
<span id="cb11-30"><a href="#cb11-30" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>          <span class="fl">5.245000</span>  </span>
<span id="cb11-31"><a href="#cb11-31" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> yesno_to_bool(df, column<span class="op">=</span><span class="st">&#39;smoker&#39;</span>):</span>
<span id="cb11-32"><a href="#cb11-32" aria-hidden="true" tabindex="-1"></a>...     cp <span class="op">=</span> pd.DataFrame(df, copy<span class="op">=</span><span class="va">True</span>)</span>
<span id="cb11-33"><a href="#cb11-33" aria-hidden="true" tabindex="-1"></a>...     cp[column] <span class="op">=</span> cp[column].<span class="bu">apply</span>(<span class="kw">lambda</span> x: x <span class="op">==</span> <span class="st">&#39;Yes&#39;</span>)</span>
<span id="cb11-34"><a href="#cb11-34" aria-hidden="true" tabindex="-1"></a>...     <span class="cf">return</span> cp</span>
<span id="cb11-35"><a href="#cb11-35" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips3 <span class="op">=</span> yesno_to_bool(tips2, <span class="st">&#39;smoker&#39;</span>)</span>
<span id="cb11-36"><a href="#cb11-36" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips3.head()</span>
<span id="cb11-37"><a href="#cb11-37" aria-hidden="true" tabindex="-1"></a>Out[<span class="dv">52</span>]: </span>
<span id="cb11-38"><a href="#cb11-38" aria-hidden="true" tabindex="-1"></a>   total_bill   tip     sex  smoker  day    time  size  subtotal  <span class="op">\</span></span>
<span id="cb11-39"><a href="#cb11-39" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>       <span class="fl">16.99</span>  <span class="fl">1.01</span>  Female   <span class="va">False</span>  Sun  Dinner     <span class="dv">2</span>     <span class="fl">15.98</span>   </span>
<span id="cb11-40"><a href="#cb11-40" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>       <span class="fl">10.34</span>  <span class="fl">1.66</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">3</span>      <span class="fl">8.68</span>   </span>
<span id="cb11-41"><a href="#cb11-41" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>       <span class="fl">21.01</span>  <span class="fl">3.50</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">3</span>     <span class="fl">17.51</span>   </span>
<span id="cb11-42"><a href="#cb11-42" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>       <span class="fl">23.68</span>  <span class="fl">3.31</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">2</span>     <span class="fl">20.37</span>   </span>
<span id="cb11-43"><a href="#cb11-43" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>       <span class="fl">24.59</span>  <span class="fl">3.61</span>  Female   <span class="va">False</span>  Sun  Dinner     <span class="dv">4</span>     <span class="fl">20.98</span>   </span>
<span id="cb11-44"><a href="#cb11-44" aria-hidden="true" tabindex="-1"></a>   price_per_person  </span>
<span id="cb11-45"><a href="#cb11-45" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>          <span class="fl">7.990000</span>  </span>
<span id="cb11-46"><a href="#cb11-46" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>          <span class="fl">2.893333</span>  </span>
<span id="cb11-47"><a href="#cb11-47" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>          <span class="fl">5.836667</span>  </span>
<span id="cb11-48"><a href="#cb11-48" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>         <span class="fl">10.185000</span>  </span>
<span id="cb11-49"><a href="#cb11-49" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>          <span class="fl">5.245000</span>  </span></code></pre></div>
<p>…</p>
<p>We can combine all of these – and arbitrarily more operations –
through a higher order function called <code>compose</code>:</p>
<div class="sourceCode" id="cb12"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="im">import</span> functools</span>
<span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> <span class="kw">def</span> compose(df, <span class="op">*</span>mappers):</span>
<span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>...     <span class="cf">return</span> functools.<span class="bu">reduce</span>(<span class="kw">lambda</span> acc, x: x(acc), mappers, df)</span>
<span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_all <span class="op">=</span> compose(tips, add_subtotal, add_avg_bill, <span class="kw">lambda</span> x: yesno_to_bool(x, <span class="st">&#39;smoker&#39;</span>))</span>
<span id="cb12-5"><a href="#cb12-5" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_all.head()</span>
<span id="cb12-6"><a href="#cb12-6" aria-hidden="true" tabindex="-1"></a>   total_bill   tip     sex  smoker  day    time  size  subtotal  <span class="op">\</span></span>
<span id="cb12-7"><a href="#cb12-7" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>       <span class="fl">16.99</span>  <span class="fl">1.01</span>  Female   <span class="va">False</span>  Sun  Dinner     <span class="dv">2</span>     <span class="fl">15.98</span>   </span>
<span id="cb12-8"><a href="#cb12-8" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>       <span class="fl">10.34</span>  <span class="fl">1.66</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">3</span>      <span class="fl">8.68</span>   </span>
<span id="cb12-9"><a href="#cb12-9" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>       <span class="fl">21.01</span>  <span class="fl">3.50</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">3</span>     <span class="fl">17.51</span>   </span>
<span id="cb12-10"><a href="#cb12-10" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>       <span class="fl">23.68</span>  <span class="fl">3.31</span>    Male   <span class="va">False</span>  Sun  Dinner     <span class="dv">2</span>     <span class="fl">20.37</span>   </span>
<span id="cb12-11"><a href="#cb12-11" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>       <span class="fl">24.59</span>  <span class="fl">3.61</span>  Female   <span class="va">False</span>  Sun  Dinner     <span class="dv">4</span>     <span class="fl">20.98</span>   </span>
<span id="cb12-12"><a href="#cb12-12" aria-hidden="true" tabindex="-1"></a>   price_per_person  </span>
<span id="cb12-13"><a href="#cb12-13" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>          <span class="fl">7.990000</span>  </span>
<span id="cb12-14"><a href="#cb12-14" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>          <span class="fl">2.893333</span>  </span>
<span id="cb12-15"><a href="#cb12-15" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>          <span class="fl">5.836667</span>  </span>
<span id="cb12-16"><a href="#cb12-16" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>         <span class="fl">10.185000</span>  </span>
<span id="cb12-17"><a href="#cb12-17" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>          <span class="fl">5.245000</span>  </span></code></pre></div>
<p>One advantage of this approach is that mutating dataframes can be
lazily evaluated: We can wait to modify the data only until it’s needed
(i.e. until we call <code>compose</code>).</p>
<p>Another advantage is that we preserve all the intermediate states of
the data. Further, we have complete flexibility as to what mappings get
applied. Decide that we want to keep the <code>smokers</code> column as
strings again? – Just remove the <code>yesno_to_bool</code> function.
Decide that you’d rather map it to <code>int</code>s? – Simply swap out
the function. Just like the filter functions, these mappers can be
applied to any dataframe, provided they have the correct columns.</p>
<p>It’s worth wondering: Is copying all of the data inefficient? Surely,
we don’t want to duplicate the data all over the place, especially if
the corpus is large.</p>
<p>Pandas addresses this in a very clever manner. The constructor
performs a lazy copy! The copied dataframes store references to the
original values. Only when the data gets mutated does it decide to
allocate new memory. In other words, only the <em>differences</em> from
one dataframe to another are stored. Thus, representing transformations
with copies remains efficient while promoting many other benefits.</p>
<p>Don’t take my word for it! Let’s prove that this is the case:</p>
<div class="sourceCode" id="cb13"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_ref_original <span class="op">=</span> tips.applymap(<span class="bu">id</span>)</span>
<span id="cb13-2"><a href="#cb13-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_ref_copied <span class="op">=</span> tips_all.applymap(<span class="bu">id</span>)</span>
<span id="cb13-3"><a href="#cb13-3" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_ref_original.head()</span>
<span id="cb13-4"><a href="#cb13-4" aria-hidden="true" tabindex="-1"></a>    total_bill              tip              sex           smoker  <span class="op">\</span></span>
<span id="cb13-5"><a href="#cb13-5" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>  <span class="dv">139919566582840</span>  <span class="dv">139919566583392</span>  <span class="dv">139919566677192</span>  <span class="dv">139919567009976</span>   </span>
<span id="cb13-6"><a href="#cb13-6" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>  <span class="dv">139919566584736</span>  <span class="dv">139919566583416</span>  <span class="dv">139919567011768</span>  <span class="dv">139919567009976</span>   </span>
<span id="cb13-7"><a href="#cb13-7" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>  <span class="dv">139919566584760</span>  <span class="dv">139919566583440</span>  <span class="dv">139919567011768</span>  <span class="dv">139919567009976</span>   </span>
<span id="cb13-8"><a href="#cb13-8" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>  <span class="dv">139919566584808</span>  <span class="dv">139919566583464</span>  <span class="dv">139919567011768</span>  <span class="dv">139919567009976</span>   </span>
<span id="cb13-9"><a href="#cb13-9" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>  <span class="dv">139919566584832</span>  <span class="dv">139919566583488</span>  <span class="dv">139919566677192</span>  <span class="dv">139919567009976</span>   </span>
<span id="cb13-10"><a href="#cb13-10" aria-hidden="true" tabindex="-1"></a>               day             time            size  </span>
<span id="cb13-11"><a href="#cb13-11" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979360</span>  </span>
<span id="cb13-12"><a href="#cb13-12" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979392</span>  </span>
<span id="cb13-13"><a href="#cb13-13" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979392</span>  </span>
<span id="cb13-14"><a href="#cb13-14" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979360</span>  </span>
<span id="cb13-15"><a href="#cb13-15" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979424</span>  </span>
<span id="cb13-16"><a href="#cb13-16" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_ref_copied.head()</span>
<span id="cb13-17"><a href="#cb13-17" aria-hidden="true" tabindex="-1"></a>        total_bill              tip              sex          smoker  <span class="op">\</span></span>
<span id="cb13-18"><a href="#cb13-18" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>  <span class="dv">139919450679696</span>  <span class="dv">139919450735360</span>  <span class="dv">139919566677192</span>  <span class="dv">94289170711232</span>   </span>
<span id="cb13-19"><a href="#cb13-19" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>  <span class="dv">139919450679720</span>  <span class="dv">139919450735336</span>  <span class="dv">139919567011768</span>  <span class="dv">94289170711232</span>   </span>
<span id="cb13-20"><a href="#cb13-20" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>  <span class="dv">139919450679744</span>  <span class="dv">139919450735312</span>  <span class="dv">139919567011768</span>  <span class="dv">94289170711232</span>   </span>
<span id="cb13-21"><a href="#cb13-21" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>  <span class="dv">139919450679768</span>  <span class="dv">139919450735288</span>  <span class="dv">139919567011768</span>  <span class="dv">94289170711232</span>   </span>
<span id="cb13-22"><a href="#cb13-22" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>  <span class="dv">139919450679792</span>  <span class="dv">139919450735264</span>  <span class="dv">139919566677192</span>  <span class="dv">94289170711232</span>   </span>
<span id="cb13-23"><a href="#cb13-23" aria-hidden="true" tabindex="-1"></a>               day             time            size         subtotal  <span class="op">\</span></span>
<span id="cb13-24"><a href="#cb13-24" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979360</span>  <span class="dv">139919450679696</span>   </span>
<span id="cb13-25"><a href="#cb13-25" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979392</span>  <span class="dv">139919450679720</span>   </span>
<span id="cb13-26"><a href="#cb13-26" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979392</span>  <span class="dv">139919450679744</span>   </span>
<span id="cb13-27"><a href="#cb13-27" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979360</span>  <span class="dv">139919450679768</span>   </span>
<span id="cb13-28"><a href="#cb13-28" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>  <span class="dv">139919567011600</span>  <span class="dv">139919567008184</span>  <span class="dv">94289170979424</span>  <span class="dv">139919450679792</span>   </span>
<span id="cb13-29"><a href="#cb13-29" aria-hidden="true" tabindex="-1"></a>   price_per_person  </span>
<span id="cb13-30"><a href="#cb13-30" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>   <span class="dv">139919450735360</span>  </span>
<span id="cb13-31"><a href="#cb13-31" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>   <span class="dv">139919450735336</span>  </span>
<span id="cb13-32"><a href="#cb13-32" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>   <span class="dv">139919450735312</span>  </span>
<span id="cb13-33"><a href="#cb13-33" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>   <span class="dv">139919450735288</span>  </span>
<span id="cb13-34"><a href="#cb13-34" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>   <span class="dv">139919450735264</span>  </span>
<span id="cb13-35"><a href="#cb13-35" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_xor <span class="op">=</span> tips_ref_original <span class="op">^</span> tips_ref_copied</span>
<span id="cb13-36"><a href="#cb13-36" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> tips_xor.head()</span>
<span id="cb13-37"><a href="#cb13-37" aria-hidden="true" tabindex="-1"></a>   day  price_per_person  sex  size          smoker  subtotal  time  <span class="op">\</span></span>
<span id="cb13-38"><a href="#cb13-38" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>    <span class="dv">0</span>               NaN    <span class="dv">0</span>     <span class="dv">0</span>  <span class="dv">46733414398584</span>       NaN     <span class="dv">0</span>   </span>
<span id="cb13-39"><a href="#cb13-39" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>    <span class="dv">0</span>               NaN    <span class="dv">0</span>     <span class="dv">0</span>  <span class="dv">46733414398584</span>       NaN     <span class="dv">0</span>   </span>
<span id="cb13-40"><a href="#cb13-40" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>    <span class="dv">0</span>               NaN    <span class="dv">0</span>     <span class="dv">0</span>  <span class="dv">46733414398584</span>       NaN     <span class="dv">0</span>   </span>
<span id="cb13-41"><a href="#cb13-41" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>    <span class="dv">0</span>               NaN    <span class="dv">0</span>     <span class="dv">0</span>  <span class="dv">46733414398584</span>       NaN     <span class="dv">0</span>   </span>
<span id="cb13-42"><a href="#cb13-42" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>    <span class="dv">0</span>               NaN    <span class="dv">0</span>     <span class="dv">0</span>  <span class="dv">46733414398584</span>       NaN     <span class="dv">0</span>   </span>
<span id="cb13-43"><a href="#cb13-43" aria-hidden="true" tabindex="-1"></a>         tip  total_bill  </span>
<span id="cb13-44"><a href="#cb13-44" aria-hidden="true" tabindex="-1"></a><span class="dv">0</span>  <span class="dv">423146848</span>   <span class="dv">423075240</span>  </span>
<span id="cb13-45"><a href="#cb13-45" aria-hidden="true" tabindex="-1"></a><span class="dv">1</span>  <span class="dv">423146640</span>   <span class="dv">423072264</span>  </span>
<span id="cb13-46"><a href="#cb13-46" aria-hidden="true" tabindex="-1"></a><span class="dv">2</span>  <span class="dv">423146560</span>   <span class="dv">423072376</span>  </span>
<span id="cb13-47"><a href="#cb13-47" aria-hidden="true" tabindex="-1"></a><span class="dv">3</span>  <span class="dv">423146512</span>   <span class="dv">423072304</span>  </span>
<span id="cb13-48"><a href="#cb13-48" aria-hidden="true" tabindex="-1"></a><span class="dv">4</span>  <span class="dv">423146592</span>   <span class="dv">423073264</span>  </span></code></pre></div>]]></description>
</item>
<item>
<title>First Blog Post</title>
<pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/first-blog-post/</guid>
<description><![CDATA[<p>Well. Finally got around to making a website
that was more than a placeholder. It was pretty easy after all. Jekyll
worked out quite well. Now I can write without much fuss in
markdown.</p>]]></description>
</item>
<item>
<title>Thoughts About Cognitive Ecology</title>
<pubDate>Thu, 19 Jan 2017 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/thoughts-about-cognitive-ecology/</guid>
<description><![CDATA[<h2 id="where-is-the-mind">Where is the Mind?</h2>
<p>One the first day of Distributed Cognition, COGS 102a at UCSD,
Professor Johnson hands out a piece of paper for every pair of students
in a 400 person auditorium. On the back of the sheet is a maze, which
cannot be solved until the class has heard her instructions.</p>
<p>We all turn to our right or left and team up with our neighbor, as
per the instructions. One person in the team is allowed to put a pen to
the start of the maze. However, this person must have his or her eyes
closed thereafter. The other person is allowed to see the maze and
communicate instructions to the effector team member, but cannot
physically intervene in any way.</p>
<p>The time begins, every team flips their paper, and over the next
three minutes the class is full voices commanding “Up – right! No, too
far!” and the like.</p>
<p>At the end of the exercise, Professor Johnson proposes a question:
Where is the mind that got through the maze?</p>
<p>The class thinks this over for a minute before a few students raise
their hands.</p>
<p>“It had to have been the students providing instructions,” one
student argues, “For they perceived the maze, understood it, and planned
a navigation strategy.”</p>
<p>Another student counters: “No, the mind belongs with the students who
had a pen to the maze. They had to interpret and embody the instructions
they received.”</p>
<p>After a little more discussion, the class waits for a definitive
answer from Professor Johnson.</p>
<p>She explained, “The mind that got through the maze is a
<em>system</em> that includes both people, the pen, and the maze.”</p>
<p>And with this moment, my perspective about the nature of
consciousness forever changed.</p>]]></description>
</item>
<item>
<title>Calyx of Held</title>
<pubDate>Fri, 02 May 2014 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/calyx-of-held/</guid>
<description><![CDATA[<p>I’m taking a class called neural encoding of
sensory systems and it make me appreciate the complexity and elegance of
the brain so much more than I have ever before. I wish that I had the
time to take all the neuroscience classes and ECE classes and their
per-requisites so that I could better understand the underlying
machinery of the human (primate) brain.</p>
<p>The globular bushy cells, for instance, have the biggest axon
diameters of all the neurons in the auditory system. They need to be so
thick because they need to transmit signals fast – from the cochlea
(where hair cells transduce mechanical sound into electric signals) to a
nucleus all the way on the opposite (contralateral) side of the brain.
This takes a few hundred microseconds, quick enough so that the fibers
connecting the cochlea from the same (ipsilateral) side of the brain
only have time to fire one action potential on to that nucleus.</p>
<p>I read an article about a team of bioengineers at Stanford creating
microchips that simulated 10,000 neurons. I feel like I could join them
if I had the chance to take computational neurobiology or semiconductor
physics – or both. If I every get a masters, I’ll be sure to take those
classes… if that’s still something that I want to do when I get
there.</p>]]></description>
</item>
<item>
<title>Film in the Era of Google Glass</title>
<pubDate>Mon, 22 Jul 2013 00:00:00 +0000</pubDate>
<guid>https://alex.merose.com/film-in-the-era-of-google-glass/</guid>
<description><![CDATA[<p>Ubiquitous technologies have already enabled us
to capture events that were never possible before. Not too long ago, one
could only see photographs and movies about the aftermath of meteorites,
plane crashes, explosions, revolutions, and the like. Camera-equipped
smartphone have made it possible to capture catastrophic events in real
time, enabling us to record history as it is happening.</p>
<p>When Google Glass becomes widely used, I expect this phenomena to
proliferate. Constant surveillance would be a casual thing. This faction
of humanity will become living cameras with names and social security
numbers. They will fight to be the first to witness and upload some
object of history, to proudly regard themselves as part of the great
peripheral system in the embodied internet.</p>
<p>Granted, a great deal of this is happening now. Google Glass,
however, seems to be a purer expression of a new trend of consumer
cybernetics. The next step after pushing augmented reality from nuance
to normalcy, in my opinion, will be incorporating biofeedback as a
causal control system.</p>
<p>What peeks my interest the most about this emerging technology is the
potential for revolutionizing art and film. Augmented reality glasses,
such as Google Glass, will usher in a new era of experimental,
independent film.</p>
<p>What if, for instance, a film had no pre-written script, director, or
editor? Instead, just costumes, props, a setting, and highly skilled
long-form improvisors, each equipped with Google Glasses. They could
reenact scenes from history or fantasy in whatever genre of their
choosing. Protagonists would not even be chosen ahead of time: Actors
would be told that there are no lead and non-lead roles; every character
is as important as you make them. Acting troupes would be valued for
their ability to imagine and implement stories as a team.</p>
<p>Director/editors would be granted permission to access the vast
amount of raw footage generated by each actor, no matter how important
or significant they ended up being. The artfulness of the movie would
not only come from the brilliance of the actors, but also from the
director/editors ability to choose the organic narratives generated from
the days of filming. Key to this technique would be the art of
selection.</p>
<p>A single film could produce enough data that teams of
editor/directors could create multiple films, each telling a separate
narrative that relates yet is independent of the others. For instance, a
team of college students could produce an independent, “open-source”
film contest, where they supply the footage of actors performing, lets
say, a murder-mystery. The job of competing editors would be to put the
film together in the most artful way.</p>
<p>This sort of application of Google Glass, to me, would combine data
science and art. There would be so much film that humans might have to
work along algorithms to find the salient aspects of a story across
multiple cameras. The story would have to be pieced together by
software-engineer artists, experts in data compression and design,
neural nets and narrative.</p>]]></description>
</item>
</channel>
</rss>
